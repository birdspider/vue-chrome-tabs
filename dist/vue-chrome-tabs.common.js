(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["VueChromeTabs"] = factory();
	else
		root["VueChromeTabs"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwibmFtZXMiOlsiZyIsIkZ1bmN0aW9uIiwiZXZhbCIsImUiLCJ3aW5kb3ciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLENBQUo7O0FBRUE7QUFDQUEsSUFBSyxZQUFXO0FBQ2YsUUFBTyxJQUFQO0FBQ0EsQ0FGRyxFQUFKOztBQUlBLElBQUk7QUFDSDtBQUNBQSxLQUFJQSxLQUFLQyxTQUFTLGFBQVQsR0FBTCxJQUFrQyxDQUFDLEdBQUVDLElBQUgsRUFBUyxNQUFULENBQXRDO0FBQ0EsQ0FIRCxDQUdFLE9BQU1DLENBQU4sRUFBUztBQUNWO0FBQ0EsS0FBRyxRQUFPQyxNQUFQLHlDQUFPQSxNQUFQLE9BQWtCLFFBQXJCLEVBQ0NKLElBQUlJLE1BQUo7QUFDRDs7QUFFRDtBQUNBO0FBQ0E7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUJOLENBQWpCIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/* styles */\n__webpack_require__(9)\n\nvar Component = __webpack_require__(10)(\n  /* script */\n  __webpack_require__(8),\n  /* template */\n  __webpack_require__(11),\n  /* scopeId */\n  \"data-v-76b30523\",\n  /* cssModules */\n  null\n)\nComponent.options.__file = \"/Users/denull/dev/js/vue-chrome-tabs/src/components/ChromeTabs.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key !== \"__esModule\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] ChromeTabs.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-76b30523\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-76b30523\", Component.options)\n  }\n})()}\n\nmodule.exports = Component.exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9DaHJvbWVUYWJzLnZ1ZT8wMWMyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBLHFCQUFnRzs7QUFFaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtFQUErRSxpREFBaUQsSUFBSTtBQUNwSSxtQ0FBbUM7O0FBRW5DO0FBQ0EsWUFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxDQUFDOztBQUVEIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qIHN0eWxlcyAqL1xucmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2V4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbi9sb2FkZXIuanM/e1xcXCJvbWl0XFxcIjowLFxcXCJyZW1vdmVcXFwiOnRydWV9IWNzcy1sb2FkZXIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLXJld3JpdGVyP2lkPWRhdGEtdi03NmIzMDUyMyZzY29wZWQ9dHJ1ZSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL0Nocm9tZVRhYnMudnVlXCIpXG5cbnZhciBDb21wb25lbnQgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9jb21wb25lbnQtbm9ybWFsaXplclwiKShcbiAgLyogc2NyaXB0ICovXG4gIHJlcXVpcmUoXCIhIWJhYmVsLWxvYWRlciEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL0Nocm9tZVRhYnMudnVlXCIpLFxuICAvKiB0ZW1wbGF0ZSAqL1xuICByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXI/aWQ9ZGF0YS12LTc2YjMwNTIzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXRlbXBsYXRlJmluZGV4PTAhLi9DaHJvbWVUYWJzLnZ1ZVwiKSxcbiAgLyogc2NvcGVJZCAqL1xuICBcImRhdGEtdi03NmIzMDUyM1wiLFxuICAvKiBjc3NNb2R1bGVzICovXG4gIG51bGxcbilcbkNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwiL1VzZXJzL2RlbnVsbC9kZXYvanMvdnVlLWNocm9tZS10YWJzL3NyYy9jb21wb25lbnRzL0Nocm9tZVRhYnMudnVlXCJcbmlmIChDb21wb25lbnQuZXNNb2R1bGUgJiYgT2JqZWN0LmtleXMoQ29tcG9uZW50LmVzTW9kdWxlKS5zb21lKGZ1bmN0aW9uIChrZXkpIHtyZXR1cm4ga2V5ICE9PSBcImRlZmF1bHRcIiAmJiBrZXkgIT09IFwiX19lc01vZHVsZVwifSkpIHtjb25zb2xlLmVycm9yKFwibmFtZWQgZXhwb3J0cyBhcmUgbm90IHN1cHBvcnRlZCBpbiAqLnZ1ZSBmaWxlcy5cIil9XG5pZiAoQ29tcG9uZW50Lm9wdGlvbnMuZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlLWxvYWRlcl0gQ2hyb21lVGFicy52dWU6IGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCB3aXRoIHRlbXBsYXRlcywgdGhleSBzaG91bGQgdXNlIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7XG4gIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIGZhbHNlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtNzZiMzA1MjNcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi03NmIzMDUyM1wiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfVxufSkoKX1cblxubW9kdWxlLmV4cG9ydHMgPSBDb21wb25lbnQuZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvY29tcG9uZW50cy9DaHJvbWVUYWJzLnZ1ZVxuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * Draggabilly v2.1.1\n * Make that shiz draggable\n * http://draggabilly.desandro.com\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(5), __webpack_require__(6)], __WEBPACK_AMD_DEFINE_RESULT__ = function (getSize, Unidragger) {\n      return factory(window, getSize, Unidragger);\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(window, require('get-size'), require('unidragger'));\n  } else {\n    // browser global\n    window.Draggabilly = factory(window, window.getSize, window.Unidragger);\n  }\n})(window, function factory(window, getSize, Unidragger) {\n\n  'use strict';\n\n  // vars\n\n  var document = window.document;\n\n  function noop() {}\n\n  // -------------------------- helpers -------------------------- //\n\n  // extend objects\n  function extend(a, b) {\n    for (var prop in b) {\n      a[prop] = b[prop];\n    }\n    return a;\n  }\n\n  function isElement(obj) {\n    return obj instanceof HTMLElement;\n  }\n\n  // -------------------------- requestAnimationFrame -------------------------- //\n\n  // get rAF, prefixed, if present\n  var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n\n  // fallback to setTimeout\n  var lastTime = 0;\n  if (!requestAnimationFrame) {\n    requestAnimationFrame = function requestAnimationFrame(callback) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      var id = setTimeout(callback, timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n  }\n\n  // -------------------------- support -------------------------- //\n\n  var docElem = document.documentElement;\n  var transformProperty = typeof docElem.style.transform == 'string' ? 'transform' : 'WebkitTransform';\n\n  var jQuery = window.jQuery;\n\n  // --------------------------  -------------------------- //\n\n  function Draggabilly(element, options) {\n    // querySelector if string\n    this.element = typeof element == 'string' ? document.querySelector(element) : element;\n\n    if (jQuery) {\n      this.$element = jQuery(this.element);\n    }\n\n    // options\n    this.options = extend({}, this.constructor.defaults);\n    this.option(options);\n\n    this._create();\n  }\n\n  // inherit Unidragger methods\n  var proto = Draggabilly.prototype = Object.create(Unidragger.prototype);\n\n  Draggabilly.defaults = {};\n\n  /**\n   * set options\n   * @param {Object} opts\n   */\n  proto.option = function (opts) {\n    extend(this.options, opts);\n  };\n\n  // css position values that don't need to be set\n  var positionValues = {\n    relative: true,\n    absolute: true,\n    fixed: true\n  };\n\n  proto._create = function () {\n\n    // properties\n    this.position = {};\n    this._getPosition();\n\n    this.startPoint = { x: 0, y: 0 };\n    this.dragPoint = { x: 0, y: 0 };\n\n    this.startPosition = extend({}, this.position);\n\n    // set relative positioning\n    var style = getComputedStyle(this.element);\n    if (!positionValues[style.position]) {\n      this.element.style.position = 'relative';\n    }\n\n    this.enable();\n    this.setHandles();\n  };\n\n  /**\n   * set this.handles and bind start events to 'em\n   */\n  proto.setHandles = function () {\n    this.handles = this.options.handle ? this.element.querySelectorAll(this.options.handle) : [this.element];\n\n    this.bindHandles();\n  };\n\n  /**\n   * emits events via EvEmitter and jQuery events\n   * @param {String} type - name of event\n   * @param {Event} event - original event\n   * @param {Array} args - extra arguments\n   */\n  proto.dispatchEvent = function (type, event, args) {\n    var emitArgs = [event].concat(args);\n    this.emitEvent(type, emitArgs);\n    var jQuery = window.jQuery;\n    // trigger jQuery event\n    if (jQuery && this.$element) {\n      if (event) {\n        // create jQuery event\n        var $event = jQuery.Event(event);\n        $event.type = type;\n        this.$element.trigger($event, args);\n      } else {\n        // just trigger with type if no event available\n        this.$element.trigger(type, args);\n      }\n    }\n  };\n\n  // -------------------------- position -------------------------- //\n\n  // get x/y position from style\n  proto._getPosition = function () {\n    var style = getComputedStyle(this.element);\n    var x = this._getPositionCoord(style.left, 'width');\n    var y = this._getPositionCoord(style.top, 'height');\n    // clean up 'auto' or other non-integer values\n    this.position.x = isNaN(x) ? 0 : x;\n    this.position.y = isNaN(y) ? 0 : y;\n\n    this._addTransformPosition(style);\n  };\n\n  proto._getPositionCoord = function (styleSide, measure) {\n    if (styleSide.indexOf('%') != -1) {\n      // convert percent into pixel for Safari, #75\n      var parentSize = getSize(this.element.parentNode);\n      // prevent not-in-DOM element throwing bug, #131\n      return !parentSize ? 0 : parseFloat(styleSide) / 100 * parentSize[measure];\n    }\n    return parseInt(styleSide, 10);\n  };\n\n  // add transform: translate( x, y ) to position\n  proto._addTransformPosition = function (style) {\n    var transform = style[transformProperty];\n    // bail out if value is 'none'\n    if (transform.indexOf('matrix') !== 0) {\n      return;\n    }\n    // split matrix(1, 0, 0, 1, x, y)\n    var matrixValues = transform.split(',');\n    // translate X value is in 12th or 4th position\n    var xIndex = transform.indexOf('matrix3d') === 0 ? 12 : 4;\n    var translateX = parseInt(matrixValues[xIndex], 10);\n    // translate Y value is in 13th or 5th position\n    var translateY = parseInt(matrixValues[xIndex + 1], 10);\n    this.position.x += translateX;\n    this.position.y += translateY;\n  };\n\n  // -------------------------- events -------------------------- //\n\n  /**\n   * pointer start\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   */\n  proto.pointerDown = function (event, pointer) {\n    this._dragPointerDown(event, pointer);\n    // kludge to blur focused inputs in dragger\n    var focused = document.activeElement;\n    // do not blur body for IE10, metafizzy/flickity#117\n    if (focused && focused.blur && focused != document.body) {\n      focused.blur();\n    }\n    // bind move and end events\n    this._bindPostStartEvents(event);\n    this.element.classList.add('is-pointer-down');\n    this.dispatchEvent('pointerDown', event, [pointer]);\n  };\n\n  /**\n   * drag move\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   */\n  proto.pointerMove = function (event, pointer) {\n    var moveVector = this._dragPointerMove(event, pointer);\n    this.dispatchEvent('pointerMove', event, [pointer, moveVector]);\n    this._dragMove(event, pointer, moveVector);\n  };\n\n  /**\n   * drag start\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   */\n  proto.dragStart = function (event, pointer) {\n    if (!this.isEnabled) {\n      return;\n    }\n    this._getPosition();\n    this.measureContainment();\n    // position _when_ drag began\n    this.startPosition.x = this.position.x;\n    this.startPosition.y = this.position.y;\n    // reset left/top style\n    this.setLeftTop();\n\n    this.dragPoint.x = 0;\n    this.dragPoint.y = 0;\n\n    this.element.classList.add('is-dragging');\n    this.dispatchEvent('dragStart', event, [pointer]);\n    // start animation\n    this.animate();\n  };\n\n  proto.measureContainment = function () {\n    var containment = this.options.containment;\n    if (!containment) {\n      return;\n    }\n\n    // use element if element\n    var container = isElement(containment) ? containment :\n    // fallback to querySelector if string\n    typeof containment == 'string' ? document.querySelector(containment) :\n    // otherwise just `true`, use the parent\n    this.element.parentNode;\n\n    var elemSize = getSize(this.element);\n    var containerSize = getSize(container);\n    var elemRect = this.element.getBoundingClientRect();\n    var containerRect = container.getBoundingClientRect();\n\n    var borderSizeX = containerSize.borderLeftWidth + containerSize.borderRightWidth;\n    var borderSizeY = containerSize.borderTopWidth + containerSize.borderBottomWidth;\n\n    var position = this.relativeStartPosition = {\n      x: elemRect.left - (containerRect.left + containerSize.borderLeftWidth),\n      y: elemRect.top - (containerRect.top + containerSize.borderTopWidth)\n    };\n\n    this.containSize = {\n      width: containerSize.width - borderSizeX - position.x - elemSize.width,\n      height: containerSize.height - borderSizeY - position.y - elemSize.height\n    };\n  };\n\n  // ----- move event ----- //\n\n  /**\n   * drag move\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   */\n  proto.dragMove = function (event, pointer, moveVector) {\n    if (!this.isEnabled) {\n      return;\n    }\n    var dragX = moveVector.x;\n    var dragY = moveVector.y;\n\n    var grid = this.options.grid;\n    var gridX = grid && grid[0];\n    var gridY = grid && grid[1];\n\n    dragX = applyGrid(dragX, gridX);\n    dragY = applyGrid(dragY, gridY);\n\n    dragX = this.containDrag('x', dragX, gridX);\n    dragY = this.containDrag('y', dragY, gridY);\n\n    // constrain to axis\n    dragX = this.options.axis == 'y' ? 0 : dragX;\n    dragY = this.options.axis == 'x' ? 0 : dragY;\n\n    this.position.x = this.startPosition.x + dragX;\n    this.position.y = this.startPosition.y + dragY;\n    // set dragPoint properties\n    this.dragPoint.x = dragX;\n    this.dragPoint.y = dragY;\n\n    this.dispatchEvent('dragMove', event, [pointer, moveVector]);\n  };\n\n  function applyGrid(value, grid, method) {\n    method = method || 'round';\n    return grid ? Math[method](value / grid) * grid : value;\n  }\n\n  proto.containDrag = function (axis, drag, grid) {\n    if (!this.options.containment) {\n      return drag;\n    }\n    var measure = axis == 'x' ? 'width' : 'height';\n\n    var rel = this.relativeStartPosition[axis];\n    var min = applyGrid(-rel, grid, 'ceil');\n    var max = this.containSize[measure];\n    max = applyGrid(max, grid, 'floor');\n    return Math.min(max, Math.max(min, drag));\n  };\n\n  // ----- end event ----- //\n\n  /**\n   * pointer up\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   */\n  proto.pointerUp = function (event, pointer) {\n    this.element.classList.remove('is-pointer-down');\n    this.dispatchEvent('pointerUp', event, [pointer]);\n    this._dragPointerUp(event, pointer);\n  };\n\n  /**\n   * drag end\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   */\n  proto.dragEnd = function (event, pointer) {\n    if (!this.isEnabled) {\n      return;\n    }\n    // use top left position when complete\n    if (transformProperty) {\n      this.element.style[transformProperty] = '';\n      this.setLeftTop();\n    }\n    this.element.classList.remove('is-dragging');\n    this.dispatchEvent('dragEnd', event, [pointer]);\n  };\n\n  // -------------------------- animation -------------------------- //\n\n  proto.animate = function () {\n    // only render and animate if dragging\n    if (!this.isDragging) {\n      return;\n    }\n\n    this.positionDrag();\n\n    var _this = this;\n    requestAnimationFrame(function animateFrame() {\n      _this.animate();\n    });\n  };\n\n  // left/top positioning\n  proto.setLeftTop = function () {\n    this.element.style.left = this.position.x + 'px';\n    this.element.style.top = this.position.y + 'px';\n  };\n\n  proto.positionDrag = function () {\n    this.element.style[transformProperty] = 'translate3d( ' + this.dragPoint.x + 'px, ' + this.dragPoint.y + 'px, 0)';\n  };\n\n  // ----- staticClick ----- //\n\n  proto.staticClick = function (event, pointer) {\n    this.dispatchEvent('staticClick', event, [pointer]);\n  };\n\n  // ----- methods ----- //\n\n  proto.enable = function () {\n    this.isEnabled = true;\n  };\n\n  proto.disable = function () {\n    this.isEnabled = false;\n    if (this.isDragging) {\n      this.dragEnd();\n    }\n  };\n\n  proto.destroy = function () {\n    this.disable();\n    // reset styles\n    this.element.style[transformProperty] = '';\n    this.element.style.left = '';\n    this.element.style.top = '';\n    this.element.style.position = '';\n    // unbind handles\n    this.unbindHandles();\n    // remove jQuery data\n    if (this.$element) {\n      this.$element.removeData('draggabilly');\n    }\n  };\n\n  // ----- jQuery bridget ----- //\n\n  // required for jQuery bridget\n  proto._init = noop;\n\n  if (jQuery && jQuery.bridget) {\n    jQuery.bridget('draggabilly', Draggabilly);\n  }\n\n  // -----  ----- //\n\n  return Draggabilly;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (immutable) */ __webpack_exports__[\"install\"] = install;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_ChromeTabs_vue__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_ChromeTabs_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_ChromeTabs_vue__);\n/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, \"ChromeTabs\", function() { return __WEBPACK_IMPORTED_MODULE_0__components_ChromeTabs_vue___default.a; });\n\n\n// Install the components\nfunction install(Vue) {\n  Vue.component('chrome-tabs', __WEBPACK_IMPORTED_MODULE_0__components_ChromeTabs_vue___default.a);\n}\n\n// Expose the components\n\n\n/* -- Plugin definition & Auto-install -- */\n/* You shouldn't have to modify the code below */\n\n// Plugin\nvar plugin = {\n  /* eslint-disable no-undef */\n  version: \"0.1.0\",\n  install: install\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (plugin);\n\n// Auto-install\nvar GlobalVue = null;\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue;\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin);\n}\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/OTU1MiJdLCJuYW1lcyI6WyJpbnN0YWxsIiwiVnVlIiwiY29tcG9uZW50IiwicGx1Z2luIiwidmVyc2lvbiIsIkdsb2JhbFZ1ZSIsIndpbmRvdyIsImdsb2JhbCIsInVzZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7QUFFQTtBQUNPLFNBQVNBLE9BQVQsQ0FBa0JDLEdBQWxCLEVBQXVCO0FBQzVCQSxNQUFJQyxTQUFKLENBQWMsYUFBZCxFQUE2QixrRUFBN0I7QUFDRDs7QUFFRDtBQUNBOztBQUlBO0FBQ0E7O0FBRUE7QUFDQSxJQUFNQyxTQUFTO0FBQ2I7QUFDQUMsV0FBUyxPQUZJO0FBR2JKO0FBSGEsQ0FBZjs7QUFNQSwrREFBZUcsTUFBZjs7QUFFQTtBQUNBLElBQUlFLFlBQVksSUFBaEI7QUFDQSxJQUFJLE9BQU9DLE1BQVAsS0FBa0IsV0FBdEIsRUFBbUM7QUFDakNELGNBQVlDLE9BQU9MLEdBQW5CO0FBQ0QsQ0FGRCxNQUVPLElBQUksT0FBT00sTUFBUCxLQUFrQixXQUF0QixFQUFtQztBQUN4Q0YsY0FBWUUsT0FBT04sR0FBbkI7QUFDRDtBQUNELElBQUlJLFNBQUosRUFBZTtBQUNiQSxZQUFVRyxHQUFWLENBQWNMLE1BQWQ7QUFDRCxDIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2hyb21lVGFicyBmcm9tICcuL2NvbXBvbmVudHMvQ2hyb21lVGFicy52dWUnXG5cbi8vIEluc3RhbGwgdGhlIGNvbXBvbmVudHNcbmV4cG9ydCBmdW5jdGlvbiBpbnN0YWxsIChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudCgnY2hyb21lLXRhYnMnLCBDaHJvbWVUYWJzKVxufVxuXG4vLyBFeHBvc2UgdGhlIGNvbXBvbmVudHNcbmV4cG9ydCB7XG4gIENocm9tZVRhYnMsXG59XG5cbi8qIC0tIFBsdWdpbiBkZWZpbml0aW9uICYgQXV0by1pbnN0YWxsIC0tICovXG4vKiBZb3Ugc2hvdWxkbid0IGhhdmUgdG8gbW9kaWZ5IHRoZSBjb2RlIGJlbG93ICovXG5cbi8vIFBsdWdpblxuY29uc3QgcGx1Z2luID0ge1xuICAvKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiAqL1xuICB2ZXJzaW9uOiBWRVJTSU9OLFxuICBpbnN0YWxsLFxufVxuXG5leHBvcnQgZGVmYXVsdCBwbHVnaW5cblxuLy8gQXV0by1pbnN0YWxsXG5sZXQgR2xvYmFsVnVlID0gbnVsbFxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gIEdsb2JhbFZ1ZSA9IHdpbmRvdy5WdWVcbn0gZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgR2xvYmFsVnVlID0gZ2xvYmFsLlZ1ZVxufVxuaWYgKEdsb2JhbFZ1ZSkge1xuICBHbG9iYWxWdWUudXNlKHBsdWdpbilcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * EvEmitter v1.0.3\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n(function (global, factory) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if (true) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n})(typeof window != 'undefined' ? window : this, function () {\n\n  \"use strict\";\n\n  function EvEmitter() {}\n\n  var proto = EvEmitter.prototype;\n\n  proto.on = function (eventName, listener) {\n    if (!eventName || !listener) {\n      return;\n    }\n    // set events hash\n    var events = this._events = this._events || {};\n    // set listeners array\n    var listeners = events[eventName] = events[eventName] || [];\n    // only add once\n    if (listeners.indexOf(listener) == -1) {\n      listeners.push(listener);\n    }\n\n    return this;\n  };\n\n  proto.once = function (eventName, listener) {\n    if (!eventName || !listener) {\n      return;\n    }\n    // add event\n    this.on(eventName, listener);\n    // set once flag\n    // set onceEvents hash\n    var onceEvents = this._onceEvents = this._onceEvents || {};\n    // set onceListeners object\n    var onceListeners = onceEvents[eventName] = onceEvents[eventName] || {};\n    // set flag\n    onceListeners[listener] = true;\n\n    return this;\n  };\n\n  proto.off = function (eventName, listener) {\n    var listeners = this._events && this._events[eventName];\n    if (!listeners || !listeners.length) {\n      return;\n    }\n    var index = listeners.indexOf(listener);\n    if (index != -1) {\n      listeners.splice(index, 1);\n    }\n\n    return this;\n  };\n\n  proto.emitEvent = function (eventName, args) {\n    var listeners = this._events && this._events[eventName];\n    if (!listeners || !listeners.length) {\n      return;\n    }\n    var i = 0;\n    var listener = listeners[i];\n    args = args || [];\n    // once stuff\n    var onceListeners = this._onceEvents && this._onceEvents[eventName];\n\n    while (listener) {\n      var isOnce = onceListeners && onceListeners[listener];\n      if (isOnce) {\n        // remove listener\n        // remove before trigger to prevent recursion\n        this.off(eventName, listener);\n        // unset once flag\n        delete onceListeners[listener];\n      }\n      // trigger listener\n      listener.apply(this, args);\n      // get next listener\n      i += isOnce ? 0 : 1;\n      listener = listeners[i];\n    }\n\n    return this;\n  };\n\n  return EvEmitter;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2V2LWVtaXR0ZXIvZXYtZW1pdHRlci5qcz9hYmJlIl0sIm5hbWVzIjpbImdsb2JhbCIsImZhY3RvcnkiLCJkZWZpbmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiRXZFbWl0dGVyIiwid2luZG93IiwicHJvdG8iLCJwcm90b3R5cGUiLCJvbiIsImV2ZW50TmFtZSIsImxpc3RlbmVyIiwiZXZlbnRzIiwiX2V2ZW50cyIsImxpc3RlbmVycyIsImluZGV4T2YiLCJwdXNoIiwib25jZSIsIm9uY2VFdmVudHMiLCJfb25jZUV2ZW50cyIsIm9uY2VMaXN0ZW5lcnMiLCJvZmYiLCJsZW5ndGgiLCJpbmRleCIsInNwbGljZSIsImVtaXRFdmVudCIsImFyZ3MiLCJpIiwiaXNPbmNlIiwiYXBwbHkiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU1BOztBQUVFLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTRCO0FBQzVCO0FBQ0EsNEJBRjRCLENBRUQ7QUFDM0IsTUFBSyxJQUFMLEVBQWlEO0FBQy9DO0FBQ0FDLElBQUEsb0NBQVFELE9BQVI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNELEdBSEQsTUFHTyxJQUFLLFFBQU9FLE1BQVAseUNBQU9BLE1BQVAsTUFBaUIsUUFBakIsSUFBNkJBLE9BQU9DLE9BQXpDLEVBQW1EO0FBQ3hEO0FBQ0FELFdBQU9DLE9BQVAsR0FBaUJILFNBQWpCO0FBQ0QsR0FITSxNQUdBO0FBQ0w7QUFDQUQsV0FBT0ssU0FBUCxHQUFtQkosU0FBbkI7QUFDRDtBQUVGLENBZEMsRUFjQyxPQUFPSyxNQUFQLElBQWlCLFdBQWpCLEdBQStCQSxNQUEvQixHQUF3QyxJQWR6QyxFQWMrQyxZQUFXOztBQUU1RDs7QUFFQSxXQUFTRCxTQUFULEdBQXFCLENBQUU7O0FBRXZCLE1BQUlFLFFBQVFGLFVBQVVHLFNBQXRCOztBQUVBRCxRQUFNRSxFQUFOLEdBQVcsVUFBVUMsU0FBVixFQUFxQkMsUUFBckIsRUFBZ0M7QUFDekMsUUFBSyxDQUFDRCxTQUFELElBQWMsQ0FBQ0MsUUFBcEIsRUFBK0I7QUFDN0I7QUFDRDtBQUNEO0FBQ0EsUUFBSUMsU0FBUyxLQUFLQyxPQUFMLEdBQWUsS0FBS0EsT0FBTCxJQUFnQixFQUE1QztBQUNBO0FBQ0EsUUFBSUMsWUFBWUYsT0FBUUYsU0FBUixJQUFzQkUsT0FBUUYsU0FBUixLQUF1QixFQUE3RDtBQUNBO0FBQ0EsUUFBS0ksVUFBVUMsT0FBVixDQUFtQkosUUFBbkIsS0FBaUMsQ0FBQyxDQUF2QyxFQUEyQztBQUN6Q0csZ0JBQVVFLElBQVYsQ0FBZ0JMLFFBQWhCO0FBQ0Q7O0FBRUQsV0FBTyxJQUFQO0FBQ0QsR0FkRDs7QUFnQkFKLFFBQU1VLElBQU4sR0FBYSxVQUFVUCxTQUFWLEVBQXFCQyxRQUFyQixFQUFnQztBQUMzQyxRQUFLLENBQUNELFNBQUQsSUFBYyxDQUFDQyxRQUFwQixFQUErQjtBQUM3QjtBQUNEO0FBQ0Q7QUFDQSxTQUFLRixFQUFMLENBQVNDLFNBQVQsRUFBb0JDLFFBQXBCO0FBQ0E7QUFDQTtBQUNBLFFBQUlPLGFBQWEsS0FBS0MsV0FBTCxHQUFtQixLQUFLQSxXQUFMLElBQW9CLEVBQXhEO0FBQ0E7QUFDQSxRQUFJQyxnQkFBZ0JGLFdBQVlSLFNBQVosSUFBMEJRLFdBQVlSLFNBQVosS0FBMkIsRUFBekU7QUFDQTtBQUNBVSxrQkFBZVQsUUFBZixJQUE0QixJQUE1Qjs7QUFFQSxXQUFPLElBQVA7QUFDRCxHQWZEOztBQWlCQUosUUFBTWMsR0FBTixHQUFZLFVBQVVYLFNBQVYsRUFBcUJDLFFBQXJCLEVBQWdDO0FBQzFDLFFBQUlHLFlBQVksS0FBS0QsT0FBTCxJQUFnQixLQUFLQSxPQUFMLENBQWNILFNBQWQsQ0FBaEM7QUFDQSxRQUFLLENBQUNJLFNBQUQsSUFBYyxDQUFDQSxVQUFVUSxNQUE5QixFQUF1QztBQUNyQztBQUNEO0FBQ0QsUUFBSUMsUUFBUVQsVUFBVUMsT0FBVixDQUFtQkosUUFBbkIsQ0FBWjtBQUNBLFFBQUtZLFNBQVMsQ0FBQyxDQUFmLEVBQW1CO0FBQ2pCVCxnQkFBVVUsTUFBVixDQUFrQkQsS0FBbEIsRUFBeUIsQ0FBekI7QUFDRDs7QUFFRCxXQUFPLElBQVA7QUFDRCxHQVhEOztBQWFBaEIsUUFBTWtCLFNBQU4sR0FBa0IsVUFBVWYsU0FBVixFQUFxQmdCLElBQXJCLEVBQTRCO0FBQzVDLFFBQUlaLFlBQVksS0FBS0QsT0FBTCxJQUFnQixLQUFLQSxPQUFMLENBQWNILFNBQWQsQ0FBaEM7QUFDQSxRQUFLLENBQUNJLFNBQUQsSUFBYyxDQUFDQSxVQUFVUSxNQUE5QixFQUF1QztBQUNyQztBQUNEO0FBQ0QsUUFBSUssSUFBSSxDQUFSO0FBQ0EsUUFBSWhCLFdBQVdHLFVBQVVhLENBQVYsQ0FBZjtBQUNBRCxXQUFPQSxRQUFRLEVBQWY7QUFDQTtBQUNBLFFBQUlOLGdCQUFnQixLQUFLRCxXQUFMLElBQW9CLEtBQUtBLFdBQUwsQ0FBa0JULFNBQWxCLENBQXhDOztBQUVBLFdBQVFDLFFBQVIsRUFBbUI7QUFDakIsVUFBSWlCLFNBQVNSLGlCQUFpQkEsY0FBZVQsUUFBZixDQUE5QjtBQUNBLFVBQUtpQixNQUFMLEVBQWM7QUFDWjtBQUNBO0FBQ0EsYUFBS1AsR0FBTCxDQUFVWCxTQUFWLEVBQXFCQyxRQUFyQjtBQUNBO0FBQ0EsZUFBT1MsY0FBZVQsUUFBZixDQUFQO0FBQ0Q7QUFDRDtBQUNBQSxlQUFTa0IsS0FBVCxDQUFnQixJQUFoQixFQUFzQkgsSUFBdEI7QUFDQTtBQUNBQyxXQUFLQyxTQUFTLENBQVQsR0FBYSxDQUFsQjtBQUNBakIsaUJBQVdHLFVBQVVhLENBQVYsQ0FBWDtBQUNEOztBQUVELFdBQU8sSUFBUDtBQUNELEdBNUJEOztBQThCQSxTQUFPdEIsU0FBUDtBQUVDLENBcEdDLENBQUYiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXZFbWl0dGVyIHYxLjAuM1xuICogTGlsJyBldmVudCBlbWl0dGVyXG4gKiBNSVQgTGljZW5zZVxuICovXG5cbi8qIGpzaGludCB1bnVzZWQ6IHRydWUsIHVuZGVmOiB0cnVlLCBzdHJpY3Q6IHRydWUgKi9cblxuKCBmdW5jdGlvbiggZ2xvYmFsLCBmYWN0b3J5ICkge1xuICAvLyB1bml2ZXJzYWwgbW9kdWxlIGRlZmluaXRpb25cbiAgLyoganNoaW50IHN0cmljdDogZmFsc2UgKi8gLyogZ2xvYmFscyBkZWZpbmUsIG1vZHVsZSwgd2luZG93ICovXG4gIGlmICggdHlwZW9mIGRlZmluZSA9PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgKSB7XG4gICAgLy8gQU1EIC0gUmVxdWlyZUpTXG4gICAgZGVmaW5lKCBmYWN0b3J5ICk7XG4gIH0gZWxzZSBpZiAoIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG4gICAgLy8gQ29tbW9uSlMgLSBCcm93c2VyaWZ5LCBXZWJwYWNrXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG4gIH0gZWxzZSB7XG4gICAgLy8gQnJvd3NlciBnbG9iYWxzXG4gICAgZ2xvYmFsLkV2RW1pdHRlciA9IGZhY3RvcnkoKTtcbiAgfVxuXG59KCB0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnID8gd2luZG93IDogdGhpcywgZnVuY3Rpb24oKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBFdkVtaXR0ZXIoKSB7fVxuXG52YXIgcHJvdG8gPSBFdkVtaXR0ZXIucHJvdG90eXBlO1xuXG5wcm90by5vbiA9IGZ1bmN0aW9uKCBldmVudE5hbWUsIGxpc3RlbmVyICkge1xuICBpZiAoICFldmVudE5hbWUgfHwgIWxpc3RlbmVyICkge1xuICAgIHJldHVybjtcbiAgfVxuICAvLyBzZXQgZXZlbnRzIGhhc2hcbiAgdmFyIGV2ZW50cyA9IHRoaXMuX2V2ZW50cyA9IHRoaXMuX2V2ZW50cyB8fCB7fTtcbiAgLy8gc2V0IGxpc3RlbmVycyBhcnJheVxuICB2YXIgbGlzdGVuZXJzID0gZXZlbnRzWyBldmVudE5hbWUgXSA9IGV2ZW50c1sgZXZlbnROYW1lIF0gfHwgW107XG4gIC8vIG9ubHkgYWRkIG9uY2VcbiAgaWYgKCBsaXN0ZW5lcnMuaW5kZXhPZiggbGlzdGVuZXIgKSA9PSAtMSApIHtcbiAgICBsaXN0ZW5lcnMucHVzaCggbGlzdGVuZXIgKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxucHJvdG8ub25jZSA9IGZ1bmN0aW9uKCBldmVudE5hbWUsIGxpc3RlbmVyICkge1xuICBpZiAoICFldmVudE5hbWUgfHwgIWxpc3RlbmVyICkge1xuICAgIHJldHVybjtcbiAgfVxuICAvLyBhZGQgZXZlbnRcbiAgdGhpcy5vbiggZXZlbnROYW1lLCBsaXN0ZW5lciApO1xuICAvLyBzZXQgb25jZSBmbGFnXG4gIC8vIHNldCBvbmNlRXZlbnRzIGhhc2hcbiAgdmFyIG9uY2VFdmVudHMgPSB0aGlzLl9vbmNlRXZlbnRzID0gdGhpcy5fb25jZUV2ZW50cyB8fCB7fTtcbiAgLy8gc2V0IG9uY2VMaXN0ZW5lcnMgb2JqZWN0XG4gIHZhciBvbmNlTGlzdGVuZXJzID0gb25jZUV2ZW50c1sgZXZlbnROYW1lIF0gPSBvbmNlRXZlbnRzWyBldmVudE5hbWUgXSB8fCB7fTtcbiAgLy8gc2V0IGZsYWdcbiAgb25jZUxpc3RlbmVyc1sgbGlzdGVuZXIgXSA9IHRydWU7XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5wcm90by5vZmYgPSBmdW5jdGlvbiggZXZlbnROYW1lLCBsaXN0ZW5lciApIHtcbiAgdmFyIGxpc3RlbmVycyA9IHRoaXMuX2V2ZW50cyAmJiB0aGlzLl9ldmVudHNbIGV2ZW50TmFtZSBdO1xuICBpZiAoICFsaXN0ZW5lcnMgfHwgIWxpc3RlbmVycy5sZW5ndGggKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBpbmRleCA9IGxpc3RlbmVycy5pbmRleE9mKCBsaXN0ZW5lciApO1xuICBpZiAoIGluZGV4ICE9IC0xICkge1xuICAgIGxpc3RlbmVycy5zcGxpY2UoIGluZGV4LCAxICk7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbnByb3RvLmVtaXRFdmVudCA9IGZ1bmN0aW9uKCBldmVudE5hbWUsIGFyZ3MgKSB7XG4gIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9ldmVudHMgJiYgdGhpcy5fZXZlbnRzWyBldmVudE5hbWUgXTtcbiAgaWYgKCAhbGlzdGVuZXJzIHx8ICFsaXN0ZW5lcnMubGVuZ3RoICkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgaSA9IDA7XG4gIHZhciBsaXN0ZW5lciA9IGxpc3RlbmVyc1tpXTtcbiAgYXJncyA9IGFyZ3MgfHwgW107XG4gIC8vIG9uY2Ugc3R1ZmZcbiAgdmFyIG9uY2VMaXN0ZW5lcnMgPSB0aGlzLl9vbmNlRXZlbnRzICYmIHRoaXMuX29uY2VFdmVudHNbIGV2ZW50TmFtZSBdO1xuXG4gIHdoaWxlICggbGlzdGVuZXIgKSB7XG4gICAgdmFyIGlzT25jZSA9IG9uY2VMaXN0ZW5lcnMgJiYgb25jZUxpc3RlbmVyc1sgbGlzdGVuZXIgXTtcbiAgICBpZiAoIGlzT25jZSApIHtcbiAgICAgIC8vIHJlbW92ZSBsaXN0ZW5lclxuICAgICAgLy8gcmVtb3ZlIGJlZm9yZSB0cmlnZ2VyIHRvIHByZXZlbnQgcmVjdXJzaW9uXG4gICAgICB0aGlzLm9mZiggZXZlbnROYW1lLCBsaXN0ZW5lciApO1xuICAgICAgLy8gdW5zZXQgb25jZSBmbGFnXG4gICAgICBkZWxldGUgb25jZUxpc3RlbmVyc1sgbGlzdGVuZXIgXTtcbiAgICB9XG4gICAgLy8gdHJpZ2dlciBsaXN0ZW5lclxuICAgIGxpc3RlbmVyLmFwcGx5KCB0aGlzLCBhcmdzICk7XG4gICAgLy8gZ2V0IG5leHQgbGlzdGVuZXJcbiAgICBpICs9IGlzT25jZSA/IDAgOiAxO1xuICAgIGxpc3RlbmVyID0gbGlzdGVuZXJzW2ldO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5yZXR1cm4gRXZFbWl0dGVyO1xuXG59KSk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9+L2V2LWVtaXR0ZXIvZXYtZW1pdHRlci5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * getSize v2.0.2\n * measure size of elements\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n/*global define: false, module: false, console: false */\n\n(function (window, factory) {\n  'use strict';\n\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n      return factory();\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n})(window, function factory() {\n  'use strict';\n\n  // -------------------------- helpers -------------------------- //\n\n  // get a number from a string, not a percentage\n\n  function getStyleSize(value) {\n    var num = parseFloat(value);\n    // not a percent like '100%', and a number\n    var isValid = value.indexOf('%') == -1 && !isNaN(num);\n    return isValid && num;\n  }\n\n  function noop() {}\n\n  var logError = typeof console == 'undefined' ? noop : function (message) {\n    console.error(message);\n  };\n\n  // -------------------------- measurements -------------------------- //\n\n  var measurements = ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom', 'marginLeft', 'marginRight', 'marginTop', 'marginBottom', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'borderBottomWidth'];\n\n  var measurementsLength = measurements.length;\n\n  function getZeroSize() {\n    var size = {\n      width: 0,\n      height: 0,\n      innerWidth: 0,\n      innerHeight: 0,\n      outerWidth: 0,\n      outerHeight: 0\n    };\n    for (var i = 0; i < measurementsLength; i++) {\n      var measurement = measurements[i];\n      size[measurement] = 0;\n    }\n    return size;\n  }\n\n  // -------------------------- getStyle -------------------------- //\n\n  /**\n   * getStyle, get style of element, check for Firefox bug\n   * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   */\n  function getStyle(elem) {\n    var style = getComputedStyle(elem);\n    if (!style) {\n      logError('Style returned ' + style + '. Are you running this code in a hidden iframe on Firefox? ' + 'See http://bit.ly/getsizebug1');\n    }\n    return style;\n  }\n\n  // -------------------------- setup -------------------------- //\n\n  var isSetup = false;\n\n  var isBoxSizeOuter;\n\n  /**\n   * setup\n   * check isBoxSizerOuter\n   * do on first getSize() rather than on page load for Firefox bug\n   */\n  function setup() {\n    // setup once\n    if (isSetup) {\n      return;\n    }\n    isSetup = true;\n\n    // -------------------------- box sizing -------------------------- //\n\n    /**\n     * WebKit measures the outer-width on style.width on border-box elems\n     * IE & Firefox<29 measures the inner-width\n     */\n    var div = document.createElement('div');\n    div.style.width = '200px';\n    div.style.padding = '1px 2px 3px 4px';\n    div.style.borderStyle = 'solid';\n    div.style.borderWidth = '1px 2px 3px 4px';\n    div.style.boxSizing = 'border-box';\n\n    var body = document.body || document.documentElement;\n    body.appendChild(div);\n    var style = getStyle(div);\n\n    getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize(style.width) == 200;\n    body.removeChild(div);\n  }\n\n  // -------------------------- getSize -------------------------- //\n\n  function getSize(elem) {\n    setup();\n\n    // use querySeletor if elem is string\n    if (typeof elem == 'string') {\n      elem = document.querySelector(elem);\n    }\n\n    // do not proceed on non-objects\n    if (!elem || (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) != 'object' || !elem.nodeType) {\n      return;\n    }\n\n    var style = getStyle(elem);\n\n    // if hidden, everything is 0\n    if (style.display == 'none') {\n      return getZeroSize();\n    }\n\n    var size = {};\n    size.width = elem.offsetWidth;\n    size.height = elem.offsetHeight;\n\n    var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n    // get all measurements\n    for (var i = 0; i < measurementsLength; i++) {\n      var measurement = measurements[i];\n      var value = style[measurement];\n      var num = parseFloat(value);\n      // any 'auto', 'medium' value will be 0\n      size[measurement] = !isNaN(num) ? num : 0;\n    }\n\n    var paddingWidth = size.paddingLeft + size.paddingRight;\n    var paddingHeight = size.paddingTop + size.paddingBottom;\n    var marginWidth = size.marginLeft + size.marginRight;\n    var marginHeight = size.marginTop + size.marginBottom;\n    var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n    var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n    var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n    // overwrite width and height if we can get it from style\n    var styleWidth = getStyleSize(style.width);\n    if (styleWidth !== false) {\n      size.width = styleWidth + (\n      // add padding and border unless it's already including it\n      isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\n    }\n\n    var styleHeight = getStyleSize(style.height);\n    if (styleHeight !== false) {\n      size.height = styleHeight + (\n      // add padding and border unless it's already including it\n      isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\n    }\n\n    size.innerWidth = size.width - (paddingWidth + borderWidth);\n    size.innerHeight = size.height - (paddingHeight + borderHeight);\n\n    size.outerWidth = size.width + marginWidth;\n    size.outerHeight = size.height + marginHeight;\n\n    return size;\n  }\n\n  return getSize;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * Unidragger v2.1.0\n * Draggable base class\n * MIT license\n */\n\n/*jshint browser: true, unused: true, undef: true, strict: true */\n\n(function (window, factory) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Unipointer) {\n      return factory(window, Unipointer);\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(window, require('unipointer'));\n  } else {\n    // browser global\n    window.Unidragger = factory(window, window.Unipointer);\n  }\n})(window, function factory(window, Unipointer) {\n\n  'use strict';\n\n  // -----  ----- //\n\n  function noop() {}\n\n  // -------------------------- Unidragger -------------------------- //\n\n  function Unidragger() {}\n\n  // inherit Unipointer & EvEmitter\n  var proto = Unidragger.prototype = Object.create(Unipointer.prototype);\n\n  // ----- bind start ----- //\n\n  proto.bindHandles = function () {\n    this._bindHandles(true);\n  };\n\n  proto.unbindHandles = function () {\n    this._bindHandles(false);\n  };\n\n  var navigator = window.navigator;\n  /**\n   * works as unbinder, as you can .bindHandles( false ) to unbind\n   * @param {Boolean} isBind - will unbind if falsey\n   */\n  proto._bindHandles = function (isBind) {\n    // munge isBind, default to true\n    isBind = isBind === undefined ? true : !!isBind;\n    // extra bind logic\n    var binderExtra;\n    if (navigator.pointerEnabled) {\n      binderExtra = function binderExtra(handle) {\n        // disable scrolling on the element\n        handle.style.touchAction = isBind ? 'none' : '';\n      };\n    } else if (navigator.msPointerEnabled) {\n      binderExtra = function binderExtra(handle) {\n        // disable scrolling on the element\n        handle.style.msTouchAction = isBind ? 'none' : '';\n      };\n    } else {\n      binderExtra = noop;\n    }\n    // bind each handle\n    var bindMethod = isBind ? 'addEventListener' : 'removeEventListener';\n    for (var i = 0; i < this.handles.length; i++) {\n      var handle = this.handles[i];\n      this._bindStartEvent(handle, isBind);\n      binderExtra(handle);\n      handle[bindMethod]('click', this);\n    }\n  };\n\n  // ----- start event ----- //\n\n  /**\n   * pointer start\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   */\n  proto.pointerDown = function (event, pointer) {\n    // dismiss range sliders\n    if (event.target.nodeName == 'INPUT' && event.target.type == 'range') {\n      // reset pointerDown logic\n      this.isPointerDown = false;\n      delete this.pointerIdentifier;\n      return;\n    }\n\n    this._dragPointerDown(event, pointer);\n    // kludge to blur focused inputs in dragger\n    var focused = document.activeElement;\n    if (focused && focused.blur) {\n      focused.blur();\n    }\n    // bind move and end events\n    this._bindPostStartEvents(event);\n    this.emitEvent('pointerDown', [event, pointer]);\n  };\n\n  // base pointer down logic\n  proto._dragPointerDown = function (event, pointer) {\n    // track to see when dragging starts\n    this.pointerDownPoint = Unipointer.getPointerPoint(pointer);\n\n    var canPreventDefault = this.canPreventDefaultOnPointerDown(event, pointer);\n    if (canPreventDefault) {\n      event.preventDefault();\n    }\n  };\n\n  // overwriteable method so Flickity can prevent for scrolling\n  proto.canPreventDefaultOnPointerDown = function (event) {\n    // prevent default, unless touchstart or <select>\n    return event.target.nodeName != 'SELECT';\n  };\n\n  // ----- move event ----- //\n\n  /**\n   * drag move\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   */\n  proto.pointerMove = function (event, pointer) {\n    var moveVector = this._dragPointerMove(event, pointer);\n    this.emitEvent('pointerMove', [event, pointer, moveVector]);\n    this._dragMove(event, pointer, moveVector);\n  };\n\n  // base pointer move logic\n  proto._dragPointerMove = function (event, pointer) {\n    var movePoint = Unipointer.getPointerPoint(pointer);\n    var moveVector = {\n      x: movePoint.x - this.pointerDownPoint.x,\n      y: movePoint.y - this.pointerDownPoint.y\n    };\n    // start drag if pointer has moved far enough to start drag\n    if (!this.isDragging && this.hasDragStarted(moveVector)) {\n      this._dragStart(event, pointer);\n    }\n    return moveVector;\n  };\n\n  // condition if pointer has moved far enough to start drag\n  proto.hasDragStarted = function (moveVector) {\n    return Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3;\n  };\n\n  // ----- end event ----- //\n\n  /**\n   * pointer up\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   */\n  proto.pointerUp = function (event, pointer) {\n    this.emitEvent('pointerUp', [event, pointer]);\n    this._dragPointerUp(event, pointer);\n  };\n\n  proto._dragPointerUp = function (event, pointer) {\n    if (this.isDragging) {\n      this._dragEnd(event, pointer);\n    } else {\n      // pointer didn't move enough for drag to start\n      this._staticClick(event, pointer);\n    }\n  };\n\n  // -------------------------- drag -------------------------- //\n\n  // dragStart\n  proto._dragStart = function (event, pointer) {\n    this.isDragging = true;\n    this.dragStartPoint = Unipointer.getPointerPoint(pointer);\n    // prevent clicks\n    this.isPreventingClicks = true;\n\n    this.dragStart(event, pointer);\n  };\n\n  proto.dragStart = function (event, pointer) {\n    this.emitEvent('dragStart', [event, pointer]);\n  };\n\n  // dragMove\n  proto._dragMove = function (event, pointer, moveVector) {\n    // do not drag if not dragging yet\n    if (!this.isDragging) {\n      return;\n    }\n\n    this.dragMove(event, pointer, moveVector);\n  };\n\n  proto.dragMove = function (event, pointer, moveVector) {\n    event.preventDefault();\n    this.emitEvent('dragMove', [event, pointer, moveVector]);\n  };\n\n  // dragEnd\n  proto._dragEnd = function (event, pointer) {\n    // set flags\n    this.isDragging = false;\n    // re-enable clicking async\n    setTimeout(function () {\n      delete this.isPreventingClicks;\n    }.bind(this));\n\n    this.dragEnd(event, pointer);\n  };\n\n  proto.dragEnd = function (event, pointer) {\n    this.emitEvent('dragEnd', [event, pointer]);\n  };\n\n  // ----- onclick ----- //\n\n  // handle all clicks and prevent clicks when dragging\n  proto.onclick = function (event) {\n    if (this.isPreventingClicks) {\n      event.preventDefault();\n    }\n  };\n\n  // ----- staticClick ----- //\n\n  // triggered after pointer down & up with no/tiny movement\n  proto._staticClick = function (event, pointer) {\n    // ignore emulated mouse up clicks\n    if (this.isIgnoringMouseUp && event.type == 'mouseup') {\n      return;\n    }\n\n    // allow click in <input>s and <textarea>s\n    var nodeName = event.target.nodeName;\n    if (nodeName == 'INPUT' || nodeName == 'TEXTAREA') {\n      event.target.focus();\n    }\n    this.staticClick(event, pointer);\n\n    // set flag for emulated clicks 300ms after touchend\n    if (event.type != 'mouseup') {\n      this.isIgnoringMouseUp = true;\n      // reset flag after 300ms\n      setTimeout(function () {\n        delete this.isIgnoringMouseUp;\n      }.bind(this), 400);\n    }\n  };\n\n  proto.staticClick = function (event, pointer) {\n    this.emitEvent('staticClick', [event, pointer]);\n  };\n\n  // ----- utils ----- //\n\n  Unidragger.getPointerPoint = Unipointer.getPointerPoint;\n\n  // -----  ----- //\n\n  return Unidragger;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3VuaWRyYWdnZXIvdW5pZHJhZ2dlci5qcz9hYTM5Il0sIm5hbWVzIjpbIndpbmRvdyIsImZhY3RvcnkiLCJkZWZpbmUiLCJVbmlwb2ludGVyIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiLCJVbmlkcmFnZ2VyIiwibm9vcCIsInByb3RvIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiYmluZEhhbmRsZXMiLCJfYmluZEhhbmRsZXMiLCJ1bmJpbmRIYW5kbGVzIiwibmF2aWdhdG9yIiwiaXNCaW5kIiwidW5kZWZpbmVkIiwiYmluZGVyRXh0cmEiLCJwb2ludGVyRW5hYmxlZCIsImhhbmRsZSIsInN0eWxlIiwidG91Y2hBY3Rpb24iLCJtc1BvaW50ZXJFbmFibGVkIiwibXNUb3VjaEFjdGlvbiIsImJpbmRNZXRob2QiLCJpIiwiaGFuZGxlcyIsImxlbmd0aCIsIl9iaW5kU3RhcnRFdmVudCIsInBvaW50ZXJEb3duIiwiZXZlbnQiLCJwb2ludGVyIiwidGFyZ2V0Iiwibm9kZU5hbWUiLCJ0eXBlIiwiaXNQb2ludGVyRG93biIsInBvaW50ZXJJZGVudGlmaWVyIiwiX2RyYWdQb2ludGVyRG93biIsImZvY3VzZWQiLCJkb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJibHVyIiwiX2JpbmRQb3N0U3RhcnRFdmVudHMiLCJlbWl0RXZlbnQiLCJwb2ludGVyRG93blBvaW50IiwiZ2V0UG9pbnRlclBvaW50IiwiY2FuUHJldmVudERlZmF1bHQiLCJjYW5QcmV2ZW50RGVmYXVsdE9uUG9pbnRlckRvd24iLCJwcmV2ZW50RGVmYXVsdCIsInBvaW50ZXJNb3ZlIiwibW92ZVZlY3RvciIsIl9kcmFnUG9pbnRlck1vdmUiLCJfZHJhZ01vdmUiLCJtb3ZlUG9pbnQiLCJ4IiwieSIsImlzRHJhZ2dpbmciLCJoYXNEcmFnU3RhcnRlZCIsIl9kcmFnU3RhcnQiLCJNYXRoIiwiYWJzIiwicG9pbnRlclVwIiwiX2RyYWdQb2ludGVyVXAiLCJfZHJhZ0VuZCIsIl9zdGF0aWNDbGljayIsImRyYWdTdGFydFBvaW50IiwiaXNQcmV2ZW50aW5nQ2xpY2tzIiwiZHJhZ1N0YXJ0IiwiZHJhZ01vdmUiLCJzZXRUaW1lb3V0IiwiYmluZCIsImRyYWdFbmQiLCJvbmNsaWNrIiwiaXNJZ25vcmluZ01vdXNlVXAiLCJmb2N1cyIsInN0YXRpY0NsaWNrIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFNQTs7QUFFRSxXQUFVQSxNQUFWLEVBQWtCQyxPQUFsQixFQUE0QjtBQUM1QjtBQUNBLDJCQUY0QixDQUVGOztBQUUxQixNQUFLLElBQUwsRUFBaUQ7QUFDL0M7QUFDQUMsSUFBQSxpQ0FBUSxDQUNOLHNCQURNLENBQVIsa0NBRUcsVUFBVUMsVUFBVixFQUF1QjtBQUN4QixhQUFPRixRQUFTRCxNQUFULEVBQWlCRyxVQUFqQixDQUFQO0FBQ0QsS0FKRDtBQUFBO0FBS0QsR0FQRCxNQU9PLElBQUssUUFBT0MsTUFBUCx5Q0FBT0EsTUFBUCxNQUFpQixRQUFqQixJQUE2QkEsT0FBT0MsT0FBekMsRUFBbUQ7QUFDeEQ7QUFDQUQsV0FBT0MsT0FBUCxHQUFpQkosUUFDZkQsTUFEZSxFQUVmTSxRQUFRLFlBQVIsQ0FGZSxDQUFqQjtBQUlELEdBTk0sTUFNQTtBQUNMO0FBQ0FOLFdBQU9PLFVBQVAsR0FBb0JOLFFBQ2xCRCxNQURrQixFQUVsQkEsT0FBT0csVUFGVyxDQUFwQjtBQUlEO0FBRUYsQ0F6QkMsRUF5QkNILE1BekJELEVBeUJTLFNBQVNDLE9BQVQsQ0FBa0JELE1BQWxCLEVBQTBCRyxVQUExQixFQUF1Qzs7QUFFbEQ7O0FBRUE7O0FBRUEsV0FBU0ssSUFBVCxHQUFnQixDQUFFOztBQUVsQjs7QUFFQSxXQUFTRCxVQUFULEdBQXNCLENBQUU7O0FBRXhCO0FBQ0EsTUFBSUUsUUFBUUYsV0FBV0csU0FBWCxHQUF1QkMsT0FBT0MsTUFBUCxDQUFlVCxXQUFXTyxTQUExQixDQUFuQzs7QUFFQTs7QUFFQUQsUUFBTUksV0FBTixHQUFvQixZQUFXO0FBQzdC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LEVBQStCO0FBQzdCLFdBQUt1QyxpQkFBTCxHQUF5QixJQUF6QjtBQUNBO0FBQ0FKLGlCQUFZLFlBQVc7QUFDckIsZUFBTyxLQUFLSSxpQkFBWjtBQUNELE9BRlcsQ0FFVkgsSUFGVSxDQUVKLElBRkksQ0FBWixFQUVnQixHQUZoQjtBQUdEO0FBQ0YsR0FyQkQ7O0FBdUJBL0QsUUFBTW9FLFdBQU4sR0FBb0IsVUFBVTdDLEtBQVYsRUFBaUJDLE9BQWpCLEVBQTJCO0FBQzdDLFNBQUtZLFNBQUwsQ0FBZ0IsYUFBaEIsRUFBK0IsQ0FBRWIsS0FBRixFQUFTQyxPQUFULENBQS9CO0FBQ0QsR0FGRDs7QUFJQTs7QUFFQTFCLGFBQVd3QyxlQUFYLEdBQTZCNUMsV0FBVzRDLGVBQXhDOztBQUVBOztBQUVBLFNBQU94QyxVQUFQO0FBRUMsQ0FuUkMsQ0FBRiIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBVbmlkcmFnZ2VyIHYyLjEuMFxuICogRHJhZ2dhYmxlIGJhc2UgY2xhc3NcbiAqIE1JVCBsaWNlbnNlXG4gKi9cblxuLypqc2hpbnQgYnJvd3NlcjogdHJ1ZSwgdW51c2VkOiB0cnVlLCB1bmRlZjogdHJ1ZSwgc3RyaWN0OiB0cnVlICovXG5cbiggZnVuY3Rpb24oIHdpbmRvdywgZmFjdG9yeSApIHtcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIC8qanNoaW50IHN0cmljdDogZmFsc2UgKi8gLypnbG9iYWxzIGRlZmluZSwgbW9kdWxlLCByZXF1aXJlICovXG5cbiAgaWYgKCB0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCApIHtcbiAgICAvLyBBTURcbiAgICBkZWZpbmUoIFtcbiAgICAgICd1bmlwb2ludGVyL3VuaXBvaW50ZXInXG4gICAgXSwgZnVuY3Rpb24oIFVuaXBvaW50ZXIgKSB7XG4gICAgICByZXR1cm4gZmFjdG9yeSggd2luZG93LCBVbmlwb2ludGVyICk7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG4gICAgLy8gQ29tbW9uSlNcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoXG4gICAgICB3aW5kb3csXG4gICAgICByZXF1aXJlKCd1bmlwb2ludGVyJylcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIC8vIGJyb3dzZXIgZ2xvYmFsXG4gICAgd2luZG93LlVuaWRyYWdnZXIgPSBmYWN0b3J5KFxuICAgICAgd2luZG93LFxuICAgICAgd2luZG93LlVuaXBvaW50ZXJcbiAgICApO1xuICB9XG5cbn0oIHdpbmRvdywgZnVuY3Rpb24gZmFjdG9yeSggd2luZG93LCBVbmlwb2ludGVyICkge1xuXG4ndXNlIHN0cmljdCc7XG5cbi8vIC0tLS0tICAtLS0tLSAvL1xuXG5mdW5jdGlvbiBub29wKCkge31cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gVW5pZHJhZ2dlciAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xuXG5mdW5jdGlvbiBVbmlkcmFnZ2VyKCkge31cblxuLy8gaW5oZXJpdCBVbmlwb2ludGVyICYgRXZFbWl0dGVyXG52YXIgcHJvdG8gPSBVbmlkcmFnZ2VyLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoIFVuaXBvaW50ZXIucHJvdG90eXBlICk7XG5cbi8vIC0tLS0tIGJpbmQgc3RhcnQgLS0tLS0gLy9cblxucHJvdG8uYmluZEhhbmRsZXMgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5fYmluZEhhbmRsZXMoIHRydWUgKTtcbn07XG5cbnByb3RvLnVuYmluZEhhbmRsZXMgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5fYmluZEhhbmRsZXMoIGZhbHNlICk7XG59O1xuXG52YXIgbmF2aWdhdG9yID0gd2luZG93Lm5hdmlnYXRvcjtcbi8qKlxuICogd29ya3MgYXMgdW5iaW5kZXIsIGFzIHlvdSBjYW4gLmJpbmRIYW5kbGVzKCBmYWxzZSApIHRvIHVuYmluZFxuICogQHBhcmFtIHtCb29sZWFufSBpc0JpbmQgLSB3aWxsIHVuYmluZCBpZiBmYWxzZXlcbiAqL1xucHJvdG8uX2JpbmRIYW5kbGVzID0gZnVuY3Rpb24oIGlzQmluZCApIHtcbiAgLy8gbXVuZ2UgaXNCaW5kLCBkZWZhdWx0IHRvIHRydWVcbiAgaXNCaW5kID0gaXNCaW5kID09PSB1bmRlZmluZWQgPyB0cnVlIDogISFpc0JpbmQ7XG4gIC8vIGV4dHJhIGJpbmQgbG9naWNcbiAgdmFyIGJpbmRlckV4dHJhO1xuICBpZiAoIG5hdmlnYXRvci5wb2ludGVyRW5hYmxlZCApIHtcbiAgICBiaW5kZXJFeHRyYSA9IGZ1bmN0aW9uKCBoYW5kbGUgKSB7XG4gICAgICAvLyBkaXNhYmxlIHNjcm9sbGluZyBvbiB0aGUgZWxlbWVudFxuICAgICAgaGFuZGxlLnN0eWxlLnRvdWNoQWN0aW9uID0gaXNCaW5kID8gJ25vbmUnIDogJyc7XG4gICAgfTtcbiAgfSBlbHNlIGlmICggbmF2aWdhdG9yLm1zUG9pbnRlckVuYWJsZWQgKSB7XG4gICAgYmluZGVyRXh0cmEgPSBmdW5jdGlvbiggaGFuZGxlICkge1xuICAgICAgLy8gZGlzYWJsZSBzY3JvbGxpbmcgb24gdGhlIGVsZW1lbnRcbiAgICAgIGhhbmRsZS5zdHlsZS5tc1RvdWNoQWN0aW9uID0gaXNCaW5kID8gJ25vbmUnIDogJyc7XG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICBiaW5kZXJFeHRyYSA9IG5vb3A7XG4gIH1cbiAgLy8gYmluZCBlYWNoIGhhbmRsZVxuICB2YXIgYmluZE1ldGhvZCA9IGlzQmluZCA/ICdhZGRFdmVudExpc3RlbmVyJyA6ICdyZW1vdmVFdmVudExpc3RlbmVyJztcbiAgZm9yICggdmFyIGk9MDsgaSA8IHRoaXMuaGFuZGxlcy5sZW5ndGg7IGkrKyApIHtcbiAgICB2YXIgaGFuZGxlID0gdGhpcy5oYW5kbGVzW2ldO1xuICAgIHRoaXMuX2JpbmRTdGFydEV2ZW50KCBoYW5kbGUsIGlzQmluZCApO1xuICAgIGJpbmRlckV4dHJhKCBoYW5kbGUgKTtcbiAgICBoYW5kbGVbIGJpbmRNZXRob2QgXSggJ2NsaWNrJywgdGhpcyApO1xuICB9XG59O1xuXG4vLyAtLS0tLSBzdGFydCBldmVudCAtLS0tLSAvL1xuXG4vKipcbiAqIHBvaW50ZXIgc3RhcnRcbiAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50XG4gKiBAcGFyYW0ge0V2ZW50IG9yIFRvdWNofSBwb2ludGVyXG4gKi9cbnByb3RvLnBvaW50ZXJEb3duID0gZnVuY3Rpb24oIGV2ZW50LCBwb2ludGVyICkge1xuICAvLyBkaXNtaXNzIHJhbmdlIHNsaWRlcnNcbiAgaWYgKCBldmVudC50YXJnZXQubm9kZU5hbWUgPT0gJ0lOUFVUJyAmJiBldmVudC50YXJnZXQudHlwZSA9PSAncmFuZ2UnICkge1xuICAgIC8vIHJlc2V0IHBvaW50ZXJEb3duIGxvZ2ljXG4gICAgdGhpcy5pc1BvaW50ZXJEb3duID0gZmFsc2U7XG4gICAgZGVsZXRlIHRoaXMucG9pbnRlcklkZW50aWZpZXI7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdGhpcy5fZHJhZ1BvaW50ZXJEb3duKCBldmVudCwgcG9pbnRlciApO1xuICAvLyBrbHVkZ2UgdG8gYmx1ciBmb2N1c2VkIGlucHV0cyBpbiBkcmFnZ2VyXG4gIHZhciBmb2N1c2VkID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcbiAgaWYgKCBmb2N1c2VkICYmIGZvY3VzZWQuYmx1ciApIHtcbiAgICBmb2N1c2VkLmJsdXIoKTtcbiAgfVxuICAvLyBiaW5kIG1vdmUgYW5kIGVuZCBldmVudHNcbiAgdGhpcy5fYmluZFBvc3RTdGFydEV2ZW50cyggZXZlbnQgKTtcbiAgdGhpcy5lbWl0RXZlbnQoICdwb2ludGVyRG93bicsIFsgZXZlbnQsIHBvaW50ZXIgXSApO1xufTtcblxuLy8gYmFzZSBwb2ludGVyIGRvd24gbG9naWNcbnByb3RvLl9kcmFnUG9pbnRlckRvd24gPSBmdW5jdGlvbiggZXZlbnQsIHBvaW50ZXIgKSB7XG4gIC8vIHRyYWNrIHRvIHNlZSB3aGVuIGRyYWdnaW5nIHN0YXJ0c1xuICB0aGlzLnBvaW50ZXJEb3duUG9pbnQgPSBVbmlwb2ludGVyLmdldFBvaW50ZXJQb2ludCggcG9pbnRlciApO1xuXG4gIHZhciBjYW5QcmV2ZW50RGVmYXVsdCA9IHRoaXMuY2FuUHJldmVudERlZmF1bHRPblBvaW50ZXJEb3duKCBldmVudCwgcG9pbnRlciApO1xuICBpZiAoIGNhblByZXZlbnREZWZhdWx0ICkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIH1cbn07XG5cbi8vIG92ZXJ3cml0ZWFibGUgbWV0aG9kIHNvIEZsaWNraXR5IGNhbiBwcmV2ZW50IGZvciBzY3JvbGxpbmdcbnByb3RvLmNhblByZXZlbnREZWZhdWx0T25Qb2ludGVyRG93biA9IGZ1bmN0aW9uKCBldmVudCApIHtcbiAgLy8gcHJldmVudCBkZWZhdWx0LCB1bmxlc3MgdG91Y2hzdGFydCBvciA8c2VsZWN0PlxuICByZXR1cm4gZXZlbnQudGFyZ2V0Lm5vZGVOYW1lICE9ICdTRUxFQ1QnO1xufTtcblxuLy8gLS0tLS0gbW92ZSBldmVudCAtLS0tLSAvL1xuXG4vKipcbiAqIGRyYWcgbW92ZVxuICogQHBhcmFtIHtFdmVudH0gZXZlbnRcbiAqIEBwYXJhbSB7RXZlbnQgb3IgVG91Y2h9IHBvaW50ZXJcbiAqL1xucHJvdG8ucG9pbnRlck1vdmUgPSBmdW5jdGlvbiggZXZlbnQsIHBvaW50ZXIgKSB7XG4gIHZhciBtb3ZlVmVjdG9yID0gdGhpcy5fZHJhZ1BvaW50ZXJNb3ZlKCBldmVudCwgcG9pbnRlciApO1xuICB0aGlzLmVtaXRFdmVudCggJ3BvaW50ZXJNb3ZlJywgWyBldmVudCwgcG9pbnRlciwgbW92ZVZlY3RvciBdICk7XG4gIHRoaXMuX2RyYWdNb3ZlKCBldmVudCwgcG9pbnRlciwgbW92ZVZlY3RvciApO1xufTtcblxuLy8gYmFzZSBwb2ludGVyIG1vdmUgbG9naWNcbnByb3RvLl9kcmFnUG9pbnRlck1vdmUgPSBmdW5jdGlvbiggZXZlbnQsIHBvaW50ZXIgKSB7XG4gIHZhciBtb3ZlUG9pbnQgPSBVbmlwb2ludGVyLmdldFBvaW50ZXJQb2ludCggcG9pbnRlciApO1xuICB2YXIgbW92ZVZlY3RvciA9IHtcbiAgICB4OiBtb3ZlUG9pbnQueCAtIHRoaXMucG9pbnRlckRvd25Qb2ludC54LFxuICAgIHk6IG1vdmVQb2ludC55IC0gdGhpcy5wb2ludGVyRG93blBvaW50LnlcbiAgfTtcbiAgLy8gc3RhcnQgZHJhZyBpZiBwb2ludGVyIGhhcyBtb3ZlZCBmYXIgZW5vdWdoIHRvIHN0YXJ0IGRyYWdcbiAgaWYgKCAhdGhpcy5pc0RyYWdnaW5nICYmIHRoaXMuaGFzRHJhZ1N0YXJ0ZWQoIG1vdmVWZWN0b3IgKSApIHtcbiAgICB0aGlzLl9kcmFnU3RhcnQoIGV2ZW50LCBwb2ludGVyICk7XG4gIH1cbiAgcmV0dXJuIG1vdmVWZWN0b3I7XG59O1xuXG4vLyBjb25kaXRpb24gaWYgcG9pbnRlciBoYXMgbW92ZWQgZmFyIGVub3VnaCB0byBzdGFydCBkcmFnXG5wcm90by5oYXNEcmFnU3RhcnRlZCA9IGZ1bmN0aW9uKCBtb3ZlVmVjdG9yICkge1xuICByZXR1cm4gTWF0aC5hYnMoIG1vdmVWZWN0b3IueCApID4gMyB8fCBNYXRoLmFicyggbW92ZVZlY3Rvci55ICkgPiAzO1xufTtcblxuXG4vLyAtLS0tLSBlbmQgZXZlbnQgLS0tLS0gLy9cblxuLyoqXG4gKiBwb2ludGVyIHVwXG4gKiBAcGFyYW0ge0V2ZW50fSBldmVudFxuICogQHBhcmFtIHtFdmVudCBvciBUb3VjaH0gcG9pbnRlclxuICovXG5wcm90by5wb2ludGVyVXAgPSBmdW5jdGlvbiggZXZlbnQsIHBvaW50ZXIgKSB7XG4gIHRoaXMuZW1pdEV2ZW50KCAncG9pbnRlclVwJywgWyBldmVudCwgcG9pbnRlciBdICk7XG4gIHRoaXMuX2RyYWdQb2ludGVyVXAoIGV2ZW50LCBwb2ludGVyICk7XG59O1xuXG5wcm90by5fZHJhZ1BvaW50ZXJVcCA9IGZ1bmN0aW9uKCBldmVudCwgcG9pbnRlciApIHtcbiAgaWYgKCB0aGlzLmlzRHJhZ2dpbmcgKSB7XG4gICAgdGhpcy5fZHJhZ0VuZCggZXZlbnQsIHBvaW50ZXIgKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBwb2ludGVyIGRpZG4ndCBtb3ZlIGVub3VnaCBmb3IgZHJhZyB0byBzdGFydFxuICAgIHRoaXMuX3N0YXRpY0NsaWNrKCBldmVudCwgcG9pbnRlciApO1xuICB9XG59O1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBkcmFnIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXG5cbi8vIGRyYWdTdGFydFxucHJvdG8uX2RyYWdTdGFydCA9IGZ1bmN0aW9uKCBldmVudCwgcG9pbnRlciApIHtcbiAgdGhpcy5pc0RyYWdnaW5nID0gdHJ1ZTtcbiAgdGhpcy5kcmFnU3RhcnRQb2ludCA9IFVuaXBvaW50ZXIuZ2V0UG9pbnRlclBvaW50KCBwb2ludGVyICk7XG4gIC8vIHByZXZlbnQgY2xpY2tzXG4gIHRoaXMuaXNQcmV2ZW50aW5nQ2xpY2tzID0gdHJ1ZTtcblxuICB0aGlzLmRyYWdTdGFydCggZXZlbnQsIHBvaW50ZXIgKTtcbn07XG5cbnByb3RvLmRyYWdTdGFydCA9IGZ1bmN0aW9uKCBldmVudCwgcG9pbnRlciApIHtcbiAgdGhpcy5lbWl0RXZlbnQoICdkcmFnU3RhcnQnLCBbIGV2ZW50LCBwb2ludGVyIF0gKTtcbn07XG5cbi8vIGRyYWdNb3ZlXG5wcm90by5fZHJhZ01vdmUgPSBmdW5jdGlvbiggZXZlbnQsIHBvaW50ZXIsIG1vdmVWZWN0b3IgKSB7XG4gIC8vIGRvIG5vdCBkcmFnIGlmIG5vdCBkcmFnZ2luZyB5ZXRcbiAgaWYgKCAhdGhpcy5pc0RyYWdnaW5nICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHRoaXMuZHJhZ01vdmUoIGV2ZW50LCBwb2ludGVyLCBtb3ZlVmVjdG9yICk7XG59O1xuXG5wcm90by5kcmFnTW92ZSA9IGZ1bmN0aW9uKCBldmVudCwgcG9pbnRlciwgbW92ZVZlY3RvciApIHtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgdGhpcy5lbWl0RXZlbnQoICdkcmFnTW92ZScsIFsgZXZlbnQsIHBvaW50ZXIsIG1vdmVWZWN0b3IgXSApO1xufTtcblxuLy8gZHJhZ0VuZFxucHJvdG8uX2RyYWdFbmQgPSBmdW5jdGlvbiggZXZlbnQsIHBvaW50ZXIgKSB7XG4gIC8vIHNldCBmbGFnc1xuICB0aGlzLmlzRHJhZ2dpbmcgPSBmYWxzZTtcbiAgLy8gcmUtZW5hYmxlIGNsaWNraW5nIGFzeW5jXG4gIHNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuICAgIGRlbGV0ZSB0aGlzLmlzUHJldmVudGluZ0NsaWNrcztcbiAgfS5iaW5kKCB0aGlzICkgKTtcblxuICB0aGlzLmRyYWdFbmQoIGV2ZW50LCBwb2ludGVyICk7XG59O1xuXG5wcm90by5kcmFnRW5kID0gZnVuY3Rpb24oIGV2ZW50LCBwb2ludGVyICkge1xuICB0aGlzLmVtaXRFdmVudCggJ2RyYWdFbmQnLCBbIGV2ZW50LCBwb2ludGVyIF0gKTtcbn07XG5cbi8vIC0tLS0tIG9uY2xpY2sgLS0tLS0gLy9cblxuLy8gaGFuZGxlIGFsbCBjbGlja3MgYW5kIHByZXZlbnQgY2xpY2tzIHdoZW4gZHJhZ2dpbmdcbnByb3RvLm9uY2xpY2sgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG4gIGlmICggdGhpcy5pc1ByZXZlbnRpbmdDbGlja3MgKSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgfVxufTtcblxuLy8gLS0tLS0gc3RhdGljQ2xpY2sgLS0tLS0gLy9cblxuLy8gdHJpZ2dlcmVkIGFmdGVyIHBvaW50ZXIgZG93biAmIHVwIHdpdGggbm8vdGlueSBtb3ZlbWVudFxucHJvdG8uX3N0YXRpY0NsaWNrID0gZnVuY3Rpb24oIGV2ZW50LCBwb2ludGVyICkge1xuICAvLyBpZ25vcmUgZW11bGF0ZWQgbW91c2UgdXAgY2xpY2tzXG4gIGlmICggdGhpcy5pc0lnbm9yaW5nTW91c2VVcCAmJiBldmVudC50eXBlID09ICdtb3VzZXVwJyApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBhbGxvdyBjbGljayBpbiA8aW5wdXQ+cyBhbmQgPHRleHRhcmVhPnNcbiAgdmFyIG5vZGVOYW1lID0gZXZlbnQudGFyZ2V0Lm5vZGVOYW1lO1xuICBpZiAoIG5vZGVOYW1lID09ICdJTlBVVCcgfHwgbm9kZU5hbWUgPT0gJ1RFWFRBUkVBJyApIHtcbiAgICBldmVudC50YXJnZXQuZm9jdXMoKTtcbiAgfVxuICB0aGlzLnN0YXRpY0NsaWNrKCBldmVudCwgcG9pbnRlciApO1xuXG4gIC8vIHNldCBmbGFnIGZvciBlbXVsYXRlZCBjbGlja3MgMzAwbXMgYWZ0ZXIgdG91Y2hlbmRcbiAgaWYgKCBldmVudC50eXBlICE9ICdtb3VzZXVwJyApIHtcbiAgICB0aGlzLmlzSWdub3JpbmdNb3VzZVVwID0gdHJ1ZTtcbiAgICAvLyByZXNldCBmbGFnIGFmdGVyIDMwMG1zXG4gICAgc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG4gICAgICBkZWxldGUgdGhpcy5pc0lnbm9yaW5nTW91c2VVcDtcbiAgICB9LmJpbmQoIHRoaXMgKSwgNDAwICk7XG4gIH1cbn07XG5cbnByb3RvLnN0YXRpY0NsaWNrID0gZnVuY3Rpb24oIGV2ZW50LCBwb2ludGVyICkge1xuICB0aGlzLmVtaXRFdmVudCggJ3N0YXRpY0NsaWNrJywgWyBldmVudCwgcG9pbnRlciBdICk7XG59O1xuXG4vLyAtLS0tLSB1dGlscyAtLS0tLSAvL1xuXG5VbmlkcmFnZ2VyLmdldFBvaW50ZXJQb2ludCA9IFVuaXBvaW50ZXIuZ2V0UG9pbnRlclBvaW50O1xuXG4vLyAtLS0tLSAgLS0tLS0gLy9cblxucmV0dXJuIFVuaWRyYWdnZXI7XG5cbn0pKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL34vdW5pZHJhZ2dlci91bmlkcmFnZ2VyLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * Unipointer v2.1.0\n * base class for doing one thing with pointer event\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*global define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (EvEmitter) {\n      return factory(window, EvEmitter);\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(window, require('ev-emitter'));\n  } else {\n    // browser global\n    window.Unipointer = factory(window, window.EvEmitter);\n  }\n})(window, function factory(window, EvEmitter) {\n\n  'use strict';\n\n  function noop() {}\n\n  function Unipointer() {}\n\n  // inherit EvEmitter\n  var proto = Unipointer.prototype = Object.create(EvEmitter.prototype);\n\n  proto.bindStartEvent = function (elem) {\n    this._bindStartEvent(elem, true);\n  };\n\n  proto.unbindStartEvent = function (elem) {\n    this._bindStartEvent(elem, false);\n  };\n\n  /**\n   * works as unbinder, as you can ._bindStart( false ) to unbind\n   * @param {Boolean} isBind - will unbind if falsey\n   */\n  proto._bindStartEvent = function (elem, isBind) {\n    // munge isBind, default to true\n    isBind = isBind === undefined ? true : !!isBind;\n    var bindMethod = isBind ? 'addEventListener' : 'removeEventListener';\n\n    if (window.navigator.pointerEnabled) {\n      // W3C Pointer Events, IE11. See https://coderwall.com/p/mfreca\n      elem[bindMethod]('pointerdown', this);\n    } else if (window.navigator.msPointerEnabled) {\n      // IE10 Pointer Events\n      elem[bindMethod]('MSPointerDown', this);\n    } else {\n      // listen for both, for devices like Chrome Pixel\n      elem[bindMethod]('mousedown', this);\n      elem[bindMethod]('touchstart', this);\n    }\n  };\n\n  // trigger handler methods for events\n  proto.handleEvent = function (event) {\n    var method = 'on' + event.type;\n    if (this[method]) {\n      this[method](event);\n    }\n  };\n\n  // returns the touch that we're keeping track of\n  proto.getTouch = function (touches) {\n    for (var i = 0; i < touches.length; i++) {\n      var touch = touches[i];\n      if (touch.identifier == this.pointerIdentifier) {\n        return touch;\n      }\n    }\n  };\n\n  // ----- start event ----- //\n\n  proto.onmousedown = function (event) {\n    // dismiss clicks from right or middle buttons\n    var button = event.button;\n    if (button && button !== 0 && button !== 1) {\n      return;\n    }\n    this._pointerDown(event, event);\n  };\n\n  proto.ontouchstart = function (event) {\n    this._pointerDown(event, event.changedTouches[0]);\n  };\n\n  proto.onMSPointerDown = proto.onpointerdown = function (event) {\n    this._pointerDown(event, event);\n  };\n\n  /**\n   * pointer start\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   */\n  proto._pointerDown = function (event, pointer) {\n    // dismiss other pointers\n    if (this.isPointerDown) {\n      return;\n    }\n\n    this.isPointerDown = true;\n    // save pointer identifier to match up touch events\n    this.pointerIdentifier = pointer.pointerId !== undefined ?\n    // pointerId for pointer events, touch.indentifier for touch events\n    pointer.pointerId : pointer.identifier;\n\n    this.pointerDown(event, pointer);\n  };\n\n  proto.pointerDown = function (event, pointer) {\n    this._bindPostStartEvents(event);\n    this.emitEvent('pointerDown', [event, pointer]);\n  };\n\n  // hash of events to be bound after start event\n  var postStartEvents = {\n    mousedown: ['mousemove', 'mouseup'],\n    touchstart: ['touchmove', 'touchend', 'touchcancel'],\n    pointerdown: ['pointermove', 'pointerup', 'pointercancel'],\n    MSPointerDown: ['MSPointerMove', 'MSPointerUp', 'MSPointerCancel']\n  };\n\n  proto._bindPostStartEvents = function (event) {\n    if (!event) {\n      return;\n    }\n    // get proper events to match start event\n    var events = postStartEvents[event.type];\n    // bind events to node\n    events.forEach(function (eventName) {\n      window.addEventListener(eventName, this);\n    }, this);\n    // save these arguments\n    this._boundPointerEvents = events;\n  };\n\n  proto._unbindPostStartEvents = function () {\n    // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\n    if (!this._boundPointerEvents) {\n      return;\n    }\n    this._boundPointerEvents.forEach(function (eventName) {\n      window.removeEventListener(eventName, this);\n    }, this);\n\n    delete this._boundPointerEvents;\n  };\n\n  // ----- move event ----- //\n\n  proto.onmousemove = function (event) {\n    this._pointerMove(event, event);\n  };\n\n  proto.onMSPointerMove = proto.onpointermove = function (event) {\n    if (event.pointerId == this.pointerIdentifier) {\n      this._pointerMove(event, event);\n    }\n  };\n\n  proto.ontouchmove = function (event) {\n    var touch = this.getTouch(event.changedTouches);\n    if (touch) {\n      this._pointerMove(event, touch);\n    }\n  };\n\n  /**\n   * pointer move\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   * @private\n   */\n  proto._pointerMove = function (event, pointer) {\n    this.pointerMove(event, pointer);\n  };\n\n  // public\n  proto.pointerMove = function (event, pointer) {\n    this.emitEvent('pointerMove', [event, pointer]);\n  };\n\n  // ----- end event ----- //\n\n\n  proto.onmouseup = function (event) {\n    this._pointerUp(event, event);\n  };\n\n  proto.onMSPointerUp = proto.onpointerup = function (event) {\n    if (event.pointerId == this.pointerIdentifier) {\n      this._pointerUp(event, event);\n    }\n  };\n\n  proto.ontouchend = function (event) {\n    var touch = this.getTouch(event.changedTouches);\n    if (touch) {\n      this._pointerUp(event, touch);\n    }\n  };\n\n  /**\n   * pointer up\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   * @private\n   */\n  proto._pointerUp = function (event, pointer) {\n    this._pointerDone();\n    this.pointerUp(event, pointer);\n  };\n\n  // public\n  proto.pointerUp = function (event, pointer) {\n    this.emitEvent('pointerUp', [event, pointer]);\n  };\n\n  // ----- pointer done ----- //\n\n  // triggered on pointer up & pointer cancel\n  proto._pointerDone = function () {\n    // reset properties\n    this.isPointerDown = false;\n    delete this.pointerIdentifier;\n    // remove events\n    this._unbindPostStartEvents();\n    this.pointerDone();\n  };\n\n  proto.pointerDone = noop;\n\n  // ----- pointer cancel ----- //\n\n  proto.onMSPointerCancel = proto.onpointercancel = function (event) {\n    if (event.pointerId == this.pointerIdentifier) {\n      this._pointerCancel(event, event);\n    }\n  };\n\n  proto.ontouchcancel = function (event) {\n    var touch = this.getTouch(event.changedTouches);\n    if (touch) {\n      this._pointerCancel(event, touch);\n    }\n  };\n\n  /**\n   * pointer cancel\n   * @param {Event} event\n   * @param {Event or Touch} pointer\n   * @private\n   */\n  proto._pointerCancel = function (event, pointer) {\n    this._pointerDone();\n    this.pointerCancel(event, pointer);\n  };\n\n  // public\n  proto.pointerCancel = function (event, pointer) {\n    this.emitEvent('pointerCancel', [event, pointer]);\n  };\n\n  // -----  ----- //\n\n  // utility function for getting x/y coords from event\n  Unipointer.getPointerPoint = function (pointer) {\n    return {\n      x: pointer.pageX,\n      y: pointer.pageY\n    };\n  };\n\n  // -----  ----- //\n\n  return Unipointer;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_draggabilly__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_draggabilly___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_draggabilly__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nvar defaultTabProperties = {\n  title: '',\n  favicon: ''\n};\nvar instanceId = 0;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'chrome-tabs',\n\n  props: {\n    tabOverlapDistance: {\n      type: Number,\n      default: 14\n    },\n    tabWidth: {\n      type: Number,\n      default: 243\n    },\n    minWidth: {\n      type: Number,\n      default: 45\n    },\n    maxWidth: {\n      type: Number,\n      default: 243\n    }\n  },\n\n  data: function data() {\n    return {\n      tabs: [],\n      currentTab: null,\n      instanceId: instanceId++,\n      tabId: 0\n    };\n  },\n\n\n  computed: {\n    tabWidth: function tabWidth() {\n      var tabsContentWidth = this.$refs.content.clientWidth - this.tabOverlapDistance;\n      var width = tabsContentWidth / this.tabs.length + this.tabOverlapDistance;\n      return Math.max(this.minWidth, Math.min(this.maxWidth, width));\n    },\n    tabEffectiveWidth: function tabEffectiveWidth() {\n      return this.tabWidth - this.tabOverlapDistance;\n    },\n    tabPositions: function tabPositions() {\n      var tabEffectiveWidth = this.tabEffectiveWidth;\n      var left = 0;\n      var positions = [];\n\n      this.tabs.forEach(function (tabEl, i) {\n        positions.push(left);\n        left += tabEffectiveWidth;\n      });\n      return positions;\n    }\n  },\n\n  methods: {\n    layoutTabs: function layoutTabs() {\n      var _this = this;\n\n      var tabWidth = this.tabWidth;\n\n      this.cleanUpPreviouslyDraggedTabs();\n\n      requestAnimationFrame(function () {\n        var styleHTML = '';\n        _this.tabPositions.forEach(function (left, i) {\n          styleHTML += '\\n            .chrome-tabs[data-chrome-tabs-instance-id=\"' + _this.instanceId + '\"] .chrome-tab:nth-child(' + (i + 1) + ') {\\n              transform: translate3d(' + left + 'px, 0, 0)\\n            }\\n          ';\n        });\n        _this.animationStyleEl.innerHTML = styleHTML;\n      });\n    },\n    cleanUpPreviouslyDraggedTabs: function cleanUpPreviouslyDraggedTabs() {\n      if (this.$refs.tabs) {\n        this.$refs.tabs.forEach(function (tabEl) {\n          return tabEl.classList.remove('chrome-tab-just-dragged');\n        });\n      }\n    },\n    addTab: function addTab(tabProperties, inBackground) {\n      var _this2 = this;\n\n      tabProperties = Object.assign({}, defaultTabProperties, tabProperties);\n      if ('id' in tabProperties) {\n        if (+tabProperties.id === tabProperties.id) {\n          this.tabId = Math.max(this.tabId, tabProperties.id) + 1;\n        }\n      } else {\n        tabProperties.id = this.tabId++;\n      }\n\n      var tabIndex = this.tabs.push(tabProperties) - 1;\n\n      if (!inBackground) {\n        this.currentTab = tabProperties.id;\n      }\n\n      this.$nextTick(function () {\n        var el = _this2.$refs.tabs[tabIndex];\n        el.classList.add('chrome-tab-just-added');\n        setTimeout(function () {\n          return el.classList.remove('chrome-tab-just-added');\n        }, 500);\n\n        _this2.layoutTabs();\n        _this2.setupDraggabilly();\n      });\n    },\n    removeTab: function removeTab(tab) {\n      for (var i = 0; i < this.tabs.length; i++) {\n        if (this.tabs[i] === tab || this.tabs[i].id === tab) {\n          this.removeTabAt(i);\n          return this.tabs[i];\n        }\n      }\n      return null;\n    },\n    removeTabAt: function removeTabAt(tabIndex) {\n      var _this3 = this;\n\n      if (this.currentTab === this.tabs[tabIndex].id) {\n        if (tabIndex > 0) {\n          this.currentTab = this.tabs[tabIndex - 1].id;\n        } else if (tabIndex < this.tabs.length - 1) {\n          this.currentTab = this.tabs[tabIndex + 1].id;\n        } else {\n          this.currentTab = null;\n        }\n      }\n\n      this.tabs.splice(tabIndex, 1);\n\n      this.$nextTick(function () {\n        _this3.layoutTabs();\n        _this3.setupDraggabilly();\n      });\n    },\n    setupDraggabilly: function setupDraggabilly() {\n      var _this4 = this;\n\n      var tabEls = this.$refs.tabs || [];\n      var tabEffectiveWidth = this.tabEffectiveWidth;\n      var tabPositions = this.tabPositions;\n\n      this.draggabillyInstances.forEach(function (draggabillyInstance) {\n        return draggabillyInstance.destroy();\n      });\n\n      tabEls.forEach(function (tabEl, originalIndex) {\n        var originalTabPositionX = tabPositions[originalIndex];\n        var draggabillyInstance = new __WEBPACK_IMPORTED_MODULE_0_draggabilly___default.a(tabEl, {\n          axis: 'x',\n          containment: _this4.$refs.content\n        });\n\n        _this4.draggabillyInstances.push(draggabillyInstance);\n\n        draggabillyInstance.on('dragStart', function () {\n          _this4.cleanUpPreviouslyDraggedTabs();\n          tabEl.classList.add('chrome-tab-currently-dragged');\n          _this4.$el.classList.add('chrome-tabs-sorting');\n        });\n\n        draggabillyInstance.on('dragEnd', function () {\n          var finalTranslateX = parseFloat(tabEl.style.left, 10);\n          tabEl.style.transform = 'translate3d(0, 0, 0)';\n\n          // Animate dragged tab back into its place\n          requestAnimationFrame(function () {\n            tabEl.style.left = '0';\n            tabEl.style.transform = 'translate3d(' + finalTranslateX + 'px, 0, 0)';\n\n            requestAnimationFrame(function () {\n              tabEl.classList.remove('chrome-tab-currently-dragged');\n              _this4.$el.classList.remove('chrome-tabs-sorting');\n\n              tabEl.classList.add('chrome-tab-just-dragged');\n\n              requestAnimationFrame(function () {\n                tabEl.style.transform = '';\n\n                _this4.setupDraggabilly();\n              });\n            });\n          });\n        });\n\n        draggabillyInstance.on('dragMove', function (event, pointer, moveVector) {\n          // Current index be computed within the event since it can change during the dragMove\n          var tabEls = _this4.$refs.tabs || [];\n          var currentIndex = tabEls.indexOf(tabEl);\n\n          var currentTabPositionX = originalTabPositionX + moveVector.x;\n          var destinationIndex = Math.max(0, Math.min(tabEls.length, Math.floor((currentTabPositionX + tabEffectiveWidth / 2) / tabEffectiveWidth)));\n\n          if (destinationIndex < currentIndex) {\n            tabEl.parentNode.insertBefore(tabEl, _this4.$refs.tabs[destinationIndex]);\n          } else if (destinationIndex > currentIndex) {\n            tabEl.parentNode.insertBefore(tabEl, _this4.$refs.tabs[destinationIndex + 1]);\n          }\n        });\n      });\n    }\n  },\n\n  created: function created() {\n    this.draggabillyInstances = [];\n  },\n  mounted: function mounted() {\n    var _this5 = this;\n\n    this.animationStyleEl = document.createElement('style');\n    this.$el.appendChild(this.animationStyleEl);\n\n    window.addEventListener('resize', function (event) {\n      return _this5.layoutTabs();\n    });\n\n    this.layoutTabs();\n    this.setupDraggabilly();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vQ2hyb21lVGFicy52dWU/YjMzNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBK0JBO0FBQ0E7U0FFQTtXQUNBO0FBRkE7QUFHQTs7QUFFQTtRQUdBOzs7O1lBR0E7ZUFFQTtBQUhBOztZQUtBO2VBRUE7QUFIQTs7WUFLQTtlQUVBO0FBSEE7O1lBS0E7ZUFJQTtBQUxBO0FBYkE7O3dCQW1CQTs7WUFFQTtrQkFDQTtrQkFDQTthQUVBO0FBTEE7QUFPQTs7OztrQ0FFQTttRUFDQTs2REFDQTs2REFDQTtBQUNBO29EQUNBO2tDQUNBO0FBQ0E7MENBQ0E7bUNBQ0E7aUJBQ0E7c0JBRUE7OzRDQUNBO3VCQUNBO2dCQUNBO0FBQ0E7YUFDQTtBQUdBO0FBckJBOzs7O0FBdUJBOzswQkFFQTs7V0FFQTs7d0NBQ0E7d0JBQ0E7c0RBQ0E7QUFDQSwySUFDQSxvREFHQTtBQUNBOzJDQUNBO0FBQ0E7QUFDQTswRUFDQTsyQkFDQTs7d0NBQ0E7O0FBQ0E7QUFDQTs7QUFDQTs7OERBQ0E7aUNBQ0E7b0RBQ0E7Z0VBQ0E7QUFDQTthQUNBO2dDQUNBO0FBRUE7O3FEQUVBOzt5QkFDQTt3Q0FDQTtBQUVBOztpQ0FDQTttQ0FDQTt5QkFDQTs7O1dBRUE7O2VBQ0E7ZUFDQTtBQUNBO0FBQ0E7dUNBQ0E7aURBQ0E7NkRBQ0E7MkJBQ0E7MkJBQ0E7QUFDQTtBQUNBO2FBQ0E7QUFDQTs7QUFDQTs7c0RBQ0E7MEJBQ0E7b0RBQ0E7b0RBQ0E7b0RBQ0E7ZUFDQTs0QkFDQTtBQUNBO0FBRUE7O2lDQUVBOztpQ0FDQTtlQUNBO2VBQ0E7QUFDQTtBQUNBOztBQUNBOztzQ0FDQTttQ0FDQTs4QkFFQTs7O21DQUVBOzs7cURBQ0E7Z0RBQ0E7O2dCQUVBO29DQUdBO0FBSkE7O3lDQU1BOzt3REFDQTtpQkFDQTs4QkFDQTttQ0FDQTtBQUVBOztzREFDQTs2REFDQTtzQkFFQTs7QUFDQTs0Q0FDQTsrQkFDQTtxREFFQTs7OENBQ0E7cUNBQ0E7MENBRUE7O2tDQUVBOztnREFDQTt3Q0FFQTs7dUJBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7aUZBQ0E7QUFDQTs0Q0FDQTs0Q0FFQTs7c0VBQ0E7Z0lBRUE7OytDQUNBO21FQUNBO0FBQ0Esc0RBQ0E7c0ZBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQTNJQTs7OEJBNElBO2dDQUNBO0FBRUE7O0FBQ0E7O21EQUNBOzhCQUVBOzs7b0JBRUE7OztTQUNBO1NBQ0E7QUFDQTtBQTdNQSIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwiY2hyb21lLXRhYnNcIiA6ZGF0YS1jaHJvbWUtdGFicy1pbnN0YW5jZS1pZD1cImluc3RhbmNlSWRcIj5cbiAgICA8ZGl2IGNsYXNzPVwiY2hyb21lLXRhYnMtY29udGVudFwiIHJlZj1cImNvbnRlbnRcIj5cbiAgICAgIDxkaXYgdi1mb3I9XCIodGFiLCB0YWJJbmRleCkgaW4gdGFic1wiXG4gICAgICAgICAgOmtleT1cInRhYi5pZFwiXG4gICAgICAgICAgcmVmPVwidGFic1wiXG4gICAgICAgICAgY2xhc3M9XCJjaHJvbWUtdGFiXCIgXG4gICAgICAgICAgOmNsYXNzPVwie1xuICAgICAgICAgICAgJ2Nocm9tZS10YWItY3VycmVudCc6ICh0YWIuaWQgPT09IGN1cnJlbnRUYWIpLFxuICAgICAgICAgIH1cIlxuICAgICAgICAgIDpzdHlsZT1cIntcbiAgICAgICAgICAgIHdpZHRoOiB0YWJXaWR0aCArICdweCcsXG4gICAgICAgICAgICB6SW5kZXg6ICh0YWIuaWQgPT09IGN1cnJlbnRUYWIpID8gKHRhYnMubGVuZ3RoICsgMSkgOiAodGFicy5sZW5ndGggLSB0YWJJbmRleCksXG4gICAgICAgICAgfVwiXG4gICAgICAgICAgQGNsaWNrPVwiY3VycmVudFRhYiA9IHRhYi5pZFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2hyb21lLXRhYi1iYWNrZ3JvdW5kXCI+XG4gICAgICAgICAgPHN2ZyB2ZXJzaW9uPVwiMS4xXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxkZWZzPjxzeW1ib2wgaWQ9XCJ0b3BsZWZ0XCIgdmlld0JveD1cIjAgMCAyMTQgMjlcIiA+PHBhdGggZD1cIk0xNC4zIDAuMUwyMTQgMC4xIDIxNCAyOSAwIDI5QzAgMjkgMTIuMiAyLjYgMTMuMiAxLjEgMTQuMy0wLjQgMTQuMyAwLjEgMTQuMyAwLjFaXCIvPjwvc3ltYm9sPjxzeW1ib2wgaWQ9XCJ0b3ByaWdodFwiIHZpZXdCb3g9XCIwIDAgMjE0IDI5XCI+PHVzZSB4bGluazpocmVmPVwiI3RvcGxlZnRcIi8+PC9zeW1ib2w+PGNsaXBQYXRoIGlkPVwiY3JvcFwiPjxyZWN0IGNsYXNzPVwibWFza1wiIHdpZHRoPVwiMTAwJVwiIGhlaWdodD1cIjEwMCVcIiB4PVwiMFwiLz48L2NsaXBQYXRoPjwvZGVmcz48c3ZnIHdpZHRoPVwiNTAlXCIgaGVpZ2h0PVwiMTAwJVwiIHRyYW5zZnJvbT1cInNjYWxlKC0xLCAxKVwiPjx1c2UgeGxpbms6aHJlZj1cIiN0b3BsZWZ0XCIgd2lkdGg9XCIyMTRcIiBoZWlnaHQ9XCIyOVwiIGNsYXNzPVwiY2hyb21lLXRhYi1iYWNrZ3JvdW5kXCIvPjx1c2UgeGxpbms6aHJlZj1cIiN0b3BsZWZ0XCIgd2lkdGg9XCIyMTRcIiBoZWlnaHQ9XCIyOVwiIGNsYXNzPVwiY2hyb21lLXRhYi1zaGFkb3dcIi8+PC9zdmc+PGcgdHJhbnNmb3JtPVwic2NhbGUoLTEsIDEpXCI+PHN2ZyB3aWR0aD1cIjUwJVwiIGhlaWdodD1cIjEwMCVcIiB4PVwiLTEwMCVcIiB5PVwiMFwiPjx1c2UgeGxpbms6aHJlZj1cIiN0b3ByaWdodFwiIHdpZHRoPVwiMjE0XCIgaGVpZ2h0PVwiMjlcIiBjbGFzcz1cImNocm9tZS10YWItYmFja2dyb3VuZFwiLz48dXNlIHhsaW5rOmhyZWY9XCIjdG9wcmlnaHRcIiB3aWR0aD1cIjIxNFwiIGhlaWdodD1cIjI5XCIgY2xhc3M9XCJjaHJvbWUtdGFiLXNoYWRvd1wiLz48L3N2Zz48L2c+PC9zdmc+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2hyb21lLXRhYi1mYXZpY29uXCIgOnN0eWxlPVwieyBiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwoJyArIHRhYi5mYXZpY29uICsgJyknIH1cIj48L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNocm9tZS10YWItdGl0bGVcIj57eyB0YWIudGl0bGUgfX08L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNocm9tZS10YWItY2xvc2VcIiBAY2xpY2suc3RvcD1cInJlbW92ZVRhYkF0KHRhYkluZGV4KVwiPjwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGRpdlxuICAgICAgcmVmPVwiYm90dG9tXCJcbiAgICAgIGNsYXNzPVwiY2hyb21lLXRhYnMtYm90dG9tLWJhclwiXG4gICAgICA6c3R5bGU9XCJ7IHpJbmRleDogdGFicy5sZW5ndGggKyAxIH1cIj48L2Rpdj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IERyYWdnYWJpbGx5IGZyb20gJ2RyYWdnYWJpbGx5J1xuY29uc3QgZGVmYXVsdFRhYlByb3BlcnRpZXMgPSB7XG4gIHRpdGxlOiAnJyxcbiAgZmF2aWNvbjogJycsXG59XG5sZXQgaW5zdGFuY2VJZCA9IDBcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnY2hyb21lLXRhYnMnLFxuXG4gIHByb3BzOiB7XG4gICAgdGFiT3ZlcmxhcERpc3RhbmNlOiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICBkZWZhdWx0OiAxNCxcbiAgICB9LFxuICAgIHRhYldpZHRoOiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICBkZWZhdWx0OiAyNDMsXG4gICAgfSxcbiAgICBtaW5XaWR0aDoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogNDUsXG4gICAgfSxcbiAgICBtYXhXaWR0aDoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogMjQzLFxuICAgIH0sXG4gIH0sXG5cbiAgZGF0YSAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRhYnM6IFtdLFxuICAgICAgY3VycmVudFRhYjogbnVsbCxcbiAgICAgIGluc3RhbmNlSWQ6IGluc3RhbmNlSWQrKyxcbiAgICAgIHRhYklkOiAwLFxuICAgIH1cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIHRhYldpZHRoICgpIHtcbiAgICAgIGNvbnN0IHRhYnNDb250ZW50V2lkdGggPSB0aGlzLiRyZWZzLmNvbnRlbnQuY2xpZW50V2lkdGggLSB0aGlzLnRhYk92ZXJsYXBEaXN0YW5jZVxuICAgICAgY29uc3Qgd2lkdGggPSAodGFic0NvbnRlbnRXaWR0aCAvIHRoaXMudGFicy5sZW5ndGgpICsgdGhpcy50YWJPdmVybGFwRGlzdGFuY2VcbiAgICAgIHJldHVybiBNYXRoLm1heCh0aGlzLm1pbldpZHRoLCBNYXRoLm1pbih0aGlzLm1heFdpZHRoLCB3aWR0aCkpXG4gICAgfSxcbiAgICB0YWJFZmZlY3RpdmVXaWR0aCAoKSB7XG4gICAgICByZXR1cm4gdGhpcy50YWJXaWR0aCAtIHRoaXMudGFiT3ZlcmxhcERpc3RhbmNlXG4gICAgfSxcbiAgICB0YWJQb3NpdGlvbnMgKCkge1xuICAgICAgY29uc3QgdGFiRWZmZWN0aXZlV2lkdGggPSB0aGlzLnRhYkVmZmVjdGl2ZVdpZHRoXG4gICAgICBsZXQgbGVmdCA9IDBcbiAgICAgIGxldCBwb3NpdGlvbnMgPSBbXVxuXG4gICAgICB0aGlzLnRhYnMuZm9yRWFjaCgodGFiRWwsIGkpID0+IHtcbiAgICAgICAgcG9zaXRpb25zLnB1c2gobGVmdClcbiAgICAgICAgbGVmdCArPSB0YWJFZmZlY3RpdmVXaWR0aFxuICAgICAgfSlcbiAgICAgIHJldHVybiBwb3NpdGlvbnNcbiAgICB9LFxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBsYXlvdXRUYWJzICgpIHtcbiAgICAgIGNvbnN0IHRhYldpZHRoID0gdGhpcy50YWJXaWR0aFxuXG4gICAgICB0aGlzLmNsZWFuVXBQcmV2aW91c2x5RHJhZ2dlZFRhYnMoKVxuXG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgICBsZXQgc3R5bGVIVE1MID0gJydcbiAgICAgICAgdGhpcy50YWJQb3NpdGlvbnMuZm9yRWFjaCgobGVmdCwgaSkgPT4ge1xuICAgICAgICAgIHN0eWxlSFRNTCArPSBgXG4gICAgICAgICAgICAuY2hyb21lLXRhYnNbZGF0YS1jaHJvbWUtdGFicy1pbnN0YW5jZS1pZD1cIiR7dGhpcy5pbnN0YW5jZUlkfVwiXSAuY2hyb21lLXRhYjpudGgtY2hpbGQoJHtpICsgMX0pIHtcbiAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgke2xlZnR9cHgsIDAsIDApXG4gICAgICAgICAgICB9XG4gICAgICAgICAgYFxuICAgICAgICB9KVxuICAgICAgICB0aGlzLmFuaW1hdGlvblN0eWxlRWwuaW5uZXJIVE1MID0gc3R5bGVIVE1MXG4gICAgICB9KVxuICAgIH0sXG4gICAgY2xlYW5VcFByZXZpb3VzbHlEcmFnZ2VkVGFicyAoKSB7XG4gICAgICBpZiAodGhpcy4kcmVmcy50YWJzKSB7XG4gICAgICAgIHRoaXMuJHJlZnMudGFicy5mb3JFYWNoKCh0YWJFbCkgPT4gdGFiRWwuY2xhc3NMaXN0LnJlbW92ZSgnY2hyb21lLXRhYi1qdXN0LWRyYWdnZWQnKSlcbiAgICAgIH1cbiAgICB9LFxuICAgIGFkZFRhYiAodGFiUHJvcGVydGllcywgaW5CYWNrZ3JvdW5kKSB7XG4gICAgICB0YWJQcm9wZXJ0aWVzID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdFRhYlByb3BlcnRpZXMsIHRhYlByb3BlcnRpZXMpXG4gICAgICBpZiAoJ2lkJyBpbiB0YWJQcm9wZXJ0aWVzKSB7XG4gICAgICAgIGlmICgrdGFiUHJvcGVydGllcy5pZCA9PT0gdGFiUHJvcGVydGllcy5pZCkge1xuICAgICAgICAgIHRoaXMudGFiSWQgPSBNYXRoLm1heCh0aGlzLnRhYklkLCB0YWJQcm9wZXJ0aWVzLmlkKSArIDFcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGFiUHJvcGVydGllcy5pZCA9IHRoaXMudGFiSWQrK1xuICAgICAgfVxuXG4gICAgICBjb25zdCB0YWJJbmRleCA9IHRoaXMudGFicy5wdXNoKHRhYlByb3BlcnRpZXMpIC0gMVxuXG4gICAgICBpZiAoIWluQmFja2dyb3VuZCkge1xuICAgICAgICB0aGlzLmN1cnJlbnRUYWIgPSB0YWJQcm9wZXJ0aWVzLmlkXG4gICAgICB9XG5cbiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgY29uc3QgZWwgPSB0aGlzLiRyZWZzLnRhYnNbdGFiSW5kZXhdXG4gICAgICAgIGVsLmNsYXNzTGlzdC5hZGQoJ2Nocm9tZS10YWItanVzdC1hZGRlZCcpXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gZWwuY2xhc3NMaXN0LnJlbW92ZSgnY2hyb21lLXRhYi1qdXN0LWFkZGVkJyksIDUwMClcblxuICAgICAgICB0aGlzLmxheW91dFRhYnMoKVxuICAgICAgICB0aGlzLnNldHVwRHJhZ2dhYmlsbHkoKVxuICAgICAgfSlcbiAgICB9LFxuICAgIHJlbW92ZVRhYiAodGFiKSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMudGFicy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAodGhpcy50YWJzW2ldID09PSB0YWIgfHwgdGhpcy50YWJzW2ldLmlkID09PSB0YWIpIHtcbiAgICAgICAgICB0aGlzLnJlbW92ZVRhYkF0KGkpO1xuICAgICAgICAgIHJldHVybiB0aGlzLnRhYnNbaV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0sXG4gICAgcmVtb3ZlVGFiQXQgKHRhYkluZGV4KSB7XG4gICAgICBpZiAodGhpcy5jdXJyZW50VGFiID09PSB0aGlzLnRhYnNbdGFiSW5kZXhdLmlkKSB7XG4gICAgICAgIGlmICh0YWJJbmRleCA+IDApIHtcbiAgICAgICAgICB0aGlzLmN1cnJlbnRUYWIgPSB0aGlzLnRhYnNbdGFiSW5kZXggLSAxXS5pZFxuICAgICAgICB9IGVsc2UgaWYgKHRhYkluZGV4IDwgdGhpcy50YWJzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICB0aGlzLmN1cnJlbnRUYWIgPSB0aGlzLnRhYnNbdGFiSW5kZXggKyAxXS5pZFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuY3VycmVudFRhYiA9IG51bGxcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLnRhYnMuc3BsaWNlKHRhYkluZGV4LCAxKVxuXG4gICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7XG4gICAgICAgIHRoaXMubGF5b3V0VGFicygpXG4gICAgICAgIHRoaXMuc2V0dXBEcmFnZ2FiaWxseSgpXG4gICAgICB9KVxuICAgIH0sXG4gICAgc2V0dXBEcmFnZ2FiaWxseSAoKSB7XG4gICAgICBjb25zdCB0YWJFbHMgPSB0aGlzLiRyZWZzLnRhYnMgfHwgW11cbiAgICAgIGNvbnN0IHRhYkVmZmVjdGl2ZVdpZHRoID0gdGhpcy50YWJFZmZlY3RpdmVXaWR0aFxuICAgICAgY29uc3QgdGFiUG9zaXRpb25zID0gdGhpcy50YWJQb3NpdGlvbnNcblxuICAgICAgdGhpcy5kcmFnZ2FiaWxseUluc3RhbmNlcy5mb3JFYWNoKGRyYWdnYWJpbGx5SW5zdGFuY2UgPT4gZHJhZ2dhYmlsbHlJbnN0YW5jZS5kZXN0cm95KCkpXG5cbiAgICAgIHRhYkVscy5mb3JFYWNoKCh0YWJFbCwgb3JpZ2luYWxJbmRleCkgPT4ge1xuICAgICAgICBjb25zdCBvcmlnaW5hbFRhYlBvc2l0aW9uWCA9IHRhYlBvc2l0aW9uc1tvcmlnaW5hbEluZGV4XVxuICAgICAgICBjb25zdCBkcmFnZ2FiaWxseUluc3RhbmNlID0gbmV3IERyYWdnYWJpbGx5KHRhYkVsLCB7XG4gICAgICAgICAgYXhpczogJ3gnLFxuICAgICAgICAgIGNvbnRhaW5tZW50OiB0aGlzLiRyZWZzLmNvbnRlbnQsXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGhpcy5kcmFnZ2FiaWxseUluc3RhbmNlcy5wdXNoKGRyYWdnYWJpbGx5SW5zdGFuY2UpXG5cbiAgICAgICAgZHJhZ2dhYmlsbHlJbnN0YW5jZS5vbignZHJhZ1N0YXJ0JywgKCkgPT4ge1xuICAgICAgICAgIHRoaXMuY2xlYW5VcFByZXZpb3VzbHlEcmFnZ2VkVGFicygpXG4gICAgICAgICAgdGFiRWwuY2xhc3NMaXN0LmFkZCgnY2hyb21lLXRhYi1jdXJyZW50bHktZHJhZ2dlZCcpXG4gICAgICAgICAgdGhpcy4kZWwuY2xhc3NMaXN0LmFkZCgnY2hyb21lLXRhYnMtc29ydGluZycpXG4gICAgICAgIH0pXG5cbiAgICAgICAgZHJhZ2dhYmlsbHlJbnN0YW5jZS5vbignZHJhZ0VuZCcsICgpID0+IHtcbiAgICAgICAgICBjb25zdCBmaW5hbFRyYW5zbGF0ZVggPSBwYXJzZUZsb2F0KHRhYkVsLnN0eWxlLmxlZnQsIDEwKVxuICAgICAgICAgIHRhYkVsLnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUzZCgwLCAwLCAwKWBcblxuICAgICAgICAgIC8vIEFuaW1hdGUgZHJhZ2dlZCB0YWIgYmFjayBpbnRvIGl0cyBwbGFjZVxuICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgICB0YWJFbC5zdHlsZS5sZWZ0ID0gJzAnXG4gICAgICAgICAgICB0YWJFbC5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlM2QoJHtmaW5hbFRyYW5zbGF0ZVh9cHgsIDAsIDApYFxuXG4gICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgICAgICAgICB0YWJFbC5jbGFzc0xpc3QucmVtb3ZlKCdjaHJvbWUtdGFiLWN1cnJlbnRseS1kcmFnZ2VkJylcbiAgICAgICAgICAgICAgdGhpcy4kZWwuY2xhc3NMaXN0LnJlbW92ZSgnY2hyb21lLXRhYnMtc29ydGluZycpXG5cbiAgICAgICAgICAgICAgdGFiRWwuY2xhc3NMaXN0LmFkZCgnY2hyb21lLXRhYi1qdXN0LWRyYWdnZWQnKVxuXG4gICAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGFiRWwuc3R5bGUudHJhbnNmb3JtID0gJydcblxuICAgICAgICAgICAgICAgIHRoaXMuc2V0dXBEcmFnZ2FiaWxseSgpXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG5cbiAgICAgICAgZHJhZ2dhYmlsbHlJbnN0YW5jZS5vbignZHJhZ01vdmUnLCAoZXZlbnQsIHBvaW50ZXIsIG1vdmVWZWN0b3IpID0+IHtcbiAgICAgICAgICAvLyBDdXJyZW50IGluZGV4IGJlIGNvbXB1dGVkIHdpdGhpbiB0aGUgZXZlbnQgc2luY2UgaXQgY2FuIGNoYW5nZSBkdXJpbmcgdGhlIGRyYWdNb3ZlXG4gICAgICAgICAgY29uc3QgdGFiRWxzID0gdGhpcy4kcmVmcy50YWJzIHx8IFtdXG4gICAgICAgICAgY29uc3QgY3VycmVudEluZGV4ID0gdGFiRWxzLmluZGV4T2YodGFiRWwpXG5cbiAgICAgICAgICBjb25zdCBjdXJyZW50VGFiUG9zaXRpb25YID0gb3JpZ2luYWxUYWJQb3NpdGlvblggKyBtb3ZlVmVjdG9yLnhcbiAgICAgICAgICBjb25zdCBkZXN0aW5hdGlvbkluZGV4ID0gTWF0aC5tYXgoMCwgTWF0aC5taW4odGFiRWxzLmxlbmd0aCwgTWF0aC5mbG9vcigoY3VycmVudFRhYlBvc2l0aW9uWCArICh0YWJFZmZlY3RpdmVXaWR0aCAvIDIpKSAvIHRhYkVmZmVjdGl2ZVdpZHRoKSkpXG5cbiAgICAgICAgICBpZiAoZGVzdGluYXRpb25JbmRleCA8IGN1cnJlbnRJbmRleCkge1xuICAgICAgICAgICAgdGFiRWwucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGFiRWwsIHRoaXMuJHJlZnMudGFic1tkZXN0aW5hdGlvbkluZGV4XSlcbiAgICAgICAgICB9IGVsc2VcbiAgICAgICAgICBpZiAoZGVzdGluYXRpb25JbmRleCA+IGN1cnJlbnRJbmRleCkge1xuICAgICAgICAgICAgdGFiRWwucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGFiRWwsIHRoaXMuJHJlZnMudGFic1tkZXN0aW5hdGlvbkluZGV4ICsgMV0pXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgICB9LFxuICB9LFxuXG4gIGNyZWF0ZWQgKCkge1xuICAgIHRoaXMuZHJhZ2dhYmlsbHlJbnN0YW5jZXMgPSBbXVxuICB9LFxuXG4gIG1vdW50ZWQgKCkge1xuICAgIHRoaXMuYW5pbWF0aW9uU3R5bGVFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJylcbiAgICB0aGlzLiRlbC5hcHBlbmRDaGlsZCh0aGlzLmFuaW1hdGlvblN0eWxlRWwpXG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZXZlbnQgPT4gdGhpcy5sYXlvdXRUYWJzKCkpXG5cbiAgICB0aGlzLmxheW91dFRhYnMoKVxuICAgIHRoaXMuc2V0dXBEcmFnZ2FiaWxseSgpXG4gIH0sXG59XG48L3NjcmlwdD5cblxuPHN0eWxlIHNjb3BlZD5cbi5jaHJvbWUtdGFicyB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBoZWlnaHQ6IDQuMmVtO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoI2RhZDlkYSwgI2Q5ZDhkOSk7XG4gIHBhZGRpbmc6IDFlbSAxLjJlbSAwLjQ1ZW0gMS4yZW07XG4gIGJvcmRlci1yYWRpdXM6IDAuNWVtIDAuNWVtIDAgMDtcbiAgYm94LXNoYWRvdzogMCAwLjA1ZW0gI2I3YjdiNztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWYsIFwiQXBwbGUgQ29sb3IgRW1vamlcIiwgXCJTZWdvZSBVSSBFbW9qaVwiLCBcIlNlZ29lIFVJIFN5bWJvbFwiO1xufVxuLmNocm9tZS10YWJzICoge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbn1cbi5jaHJvbWUtdGFicyAuY2hyb21lLXRhYnMtYm90dG9tLWJhciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICBoZWlnaHQ6IDAuNDVlbTtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICNmMmYyZjI7XG4gIGJveC1zaGFkb3c6IDAgLTAuMDVlbSByZ2JhKDAsMCwwLDAuMjcpO1xuICB6LWluZGV4OiAyMDtcbn1cbi5jaHJvbWUtdGFicyAuY2hyb21lLXRhYnMtY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5jaHJvbWUtdGFicyAuY2hyb21lLXRhYiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgaGVpZ2h0OiAyLjhlbTtcbiAgd2lkdGg6IDI0ZW07XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiAwO1xuICB6LWluZGV4OiAxO1xufVxuLmNocm9tZS10YWJzIC5jaHJvbWUtdGFiLFxuLmNocm9tZS10YWJzIC5jaHJvbWUtdGFiICoge1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuLmNocm9tZS10YWJzIC5jaHJvbWUtdGFiIC5jaHJvbWUtdGFiLWJhY2tncm91bmQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG4uY2hyb21lLXRhYnMgLmNocm9tZS10YWIgLmNocm9tZS10YWItYmFja2dyb3VuZCA+IHN2ZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4uY2hyb21lLXRhYnMgLmNocm9tZS10YWIgLmNocm9tZS10YWItYmFja2dyb3VuZCA+IHN2ZyAuY2hyb21lLXRhYi1zaGFkb3cge1xuICBmaWxsOiBub25lO1xuICBzdHJva2U6IHJnYmEoMCwwLDAsMC4yNyk7XG4gIHN0cm9rZS13aWR0aDogMC41cHg7XG59XG4uY2hyb21lLXRhYnMgLmNocm9tZS10YWIgLmNocm9tZS10YWItYmFja2dyb3VuZCA+IHN2ZyAuY2hyb21lLXRhYi1iYWNrZ3JvdW5kIHtcbiAgZmlsbDogI2QwZDBkMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAuMjVweCkgdHJhbnNsYXRlWSgwLjI1cHgpO1xufVxuLmNocm9tZS10YWJzIC5jaHJvbWUtdGFiLmNocm9tZS10YWItY3VycmVudCB7XG4gIHotaW5kZXg6IDk5OTtcbn1cbi5jaHJvbWUtdGFicyAuY2hyb21lLXRhYi5jaHJvbWUtdGFiLWN1cnJlbnQgLmNocm9tZS10YWItYmFja2dyb3VuZCA+IHN2ZyAuY2hyb21lLXRhYi1iYWNrZ3JvdW5kIHtcbiAgZmlsbDogI2YyZjJmMjtcbn1cbi5jaHJvbWUtdGFicyAuY2hyb21lLXRhYi5jaHJvbWUtdGFiLWp1c3QtYWRkZWQge1xuICB0b3A6IDEwcHg7XG4gIGFuaW1hdGlvbjogY2hyb21lLXRhYi1qdXN0LWFkZGVkIDEyMG1zIGZvcndhcmRzIGVhc2UtaW4tb3V0O1xufVxuQC1tb3ota2V5ZnJhbWVzIGNocm9tZS10YWItanVzdC1hZGRlZCB7XG4gIHRvIHtcbiAgICB0b3A6IDA7XG4gIH1cbn1cbkAtd2Via2l0LWtleWZyYW1lcyBjaHJvbWUtdGFiLWp1c3QtYWRkZWQge1xuICB0byB7XG4gICAgdG9wOiAwO1xuICB9XG59XG5ALW8ta2V5ZnJhbWVzIGNocm9tZS10YWItanVzdC1hZGRlZCB7XG4gIHRvIHtcbiAgICB0b3A6IDA7XG4gIH1cbn1cbkBrZXlmcmFtZXMgY2hyb21lLXRhYi1qdXN0LWFkZGVkIHtcbiAgdG8ge1xuICAgIHRvcDogMDtcbiAgfVxufVxuLmNocm9tZS10YWJzLmNocm9tZS10YWJzLXNvcnRpbmcgLmNocm9tZS10YWI6bm90KC5jaHJvbWUtdGFiLWN1cnJlbnRseS1kcmFnZ2VkKSxcbi5jaHJvbWUtdGFiczpub3QoLmNocm9tZS10YWJzLXNvcnRpbmcpIC5jaHJvbWUtdGFiLmNocm9tZS10YWItanVzdC1kcmFnZ2VkIHtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDEyMG1zIGVhc2UtaW4tb3V0O1xufVxuLmNocm9tZS10YWJzIC5jaHJvbWUtdGFiLWZhdmljb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1sZWZ0OiAxLjZlbTtcbiAgaGVpZ2h0OiAxLjZlbTtcbiAgd2lkdGg6IDEuNmVtO1xuICBiYWNrZ3JvdW5kLXNpemU6IDEuNmVtO1xuICBtYXJnaW4tdG9wOiAwLjZlbTtcbiAgei1pbmRleDogMztcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cbi5jaHJvbWUtdGFicyAuY2hyb21lLXRhYi10aXRsZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBjb2xvcjogIzIyMjtcbiAgcGFkZGluZzogMCAwLjI1ZW07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBmb250LXNpemU6IDEuMmVtO1xuICBtYXJnaW4tdG9wOiAwLjVlbTtcbiAgbWF4LXdpZHRoOiBjYWxjKDEwMCUgLSA1ZW0pO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cbi5jaHJvbWUtdGFicyAuY2hyb21lLXRhYi1jbG9zZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEuNGVtO1xuICBoZWlnaHQ6IDEuNGVtO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHotaW5kZXg6IDI7XG4gIHJpZ2h0OiAxLjRlbTtcbiAgdG9wOiAwLjdlbTtcbn1cbi5jaHJvbWUtdGFicyAuY2hyb21lLXRhYi1jbG9zZTo6YmVmb3JlIHtcbiAgY29udGVudDogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sO3V0ZjgsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAxNCAxNCc+PHBhdGggc3Ryb2tlPScjNWE1YTVhJyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS13aWR0aD0nMS4xMjUnIGQ9J000IDQgTDEwIDEwIE0xMCA0IEw0IDEwJz48L3BhdGg+PC9zdmc+XCIpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG59XG4uY2hyb21lLXRhYnMgLmNocm9tZS10YWItY2xvc2U6aG92ZXI6OmJlZm9yZSxcbi5jaHJvbWUtdGFicyAuY2hyb21lLXRhYi1jbG9zZTpob3ZlcjphY3RpdmU6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbDt1dGY4LDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMTQgMTQnPjxwYXRoIHN0cm9rZT0nI2ZmZicgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2Utd2lkdGg9JzEuMicgZD0nTTQgNCBMMTAgMTAgTTEwIDQgTDQgMTAnPjwvcGF0aD48L3N2Zz5cIik7XG59XG4uY2hyb21lLXRhYnMgLmNocm9tZS10YWItY2xvc2U6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjZTI1YzRiO1xufVxuLmNocm9tZS10YWJzIC5jaHJvbWUtdGFiLWNsb3NlOmhvdmVyOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICNiNzRhM2I7XG59XG5cbi5jaHJvbWUtdGFicy5jaHJvbWUtdGFicy1kYXJrLXRoZW1lIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCMxYjFkMWYsICMxZDFmMjEpO1xuICBib3gtc2hhZG93OiAwIDAuMDVlbSAjMjgyODI4O1xufVxuLmNocm9tZS10YWJzLmNocm9tZS10YWJzLWRhcmstdGhlbWUgLmNocm9tZS10YWJzLWJvdHRvbS1iYXIge1xuICBiYWNrZ3JvdW5kOiAjNTA1MDUwO1xuICBib3gtc2hhZG93OiAwIC0wLjA1ZW0gcmdiYSgwLDAsMCwwLjUpO1xufVxuLmNocm9tZS10YWJzLmNocm9tZS10YWJzLWRhcmstdGhlbWUgLmNocm9tZS10YWIgLmNocm9tZS10YWItYmFja2dyb3VuZCA+IHN2ZyAuY2hyb21lLXRhYi1zaGFkb3cge1xuICBzdHJva2U6IHJnYmEoMCwwLDAsMC41KTtcbn1cbi5jaHJvbWUtdGFicy5jaHJvbWUtdGFicy1kYXJrLXRoZW1lIC5jaHJvbWUtdGFiIC5jaHJvbWUtdGFiLWJhY2tncm91bmQgPiBzdmcgLmNocm9tZS10YWItYmFja2dyb3VuZCB7XG4gIGZpbGw6ICMzNzM3Mzc7XG59XG4uY2hyb21lLXRhYnMuY2hyb21lLXRhYnMtZGFyay10aGVtZSAuY2hyb21lLXRhYi5jaHJvbWUtdGFiLWN1cnJlbnQgLmNocm9tZS10YWItYmFja2dyb3VuZCA+IHN2ZyAuY2hyb21lLXRhYi1iYWNrZ3JvdW5kIHtcbiAgZmlsbDogIzUwNTA1MDtcbn1cbi5jaHJvbWUtdGFicy5jaHJvbWUtdGFicy1kYXJrLXRoZW1lIC5jaHJvbWUtdGFiIC5jaHJvbWUtdGFiLXRpdGxlIHtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIGNvbG9yOiAjZmZmO1xufVxuLmNocm9tZS10YWJzLmNocm9tZS10YWJzLWRhcmstdGhlbWUgLmNocm9tZS10YWIgLmNocm9tZS10YWItY2xvc2U6bm90KDpob3Zlcik6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbDt1dGY4LDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMTQgMTQnPjxwYXRoIHN0cm9rZT0nI2NmY2ZjZicgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2Utd2lkdGg9JzEuMTI1JyBkPSdNNCA0IEwxMCAxMCBNMTAgNCBMNCAxMCc+PC9wYXRoPjwvc3ZnPlwiKTtcbn1cblxuPC9zdHlsZT5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBDaHJvbWVUYWJzLnZ1ZT9jNzIwN2FiYSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9DaHJvbWVUYWJzLnZ1ZT9lODkwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9leHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4vbG9hZGVyLmpzP3tcIm9taXRcIjowLFwicmVtb3ZlXCI6dHJ1ZX0hLi9+L2Nzcy1sb2FkZXIhLi9+L3Z1ZS1sb2FkZXIvbGliL3N0eWxlLXJld3JpdGVyLmpzP2lkPWRhdGEtdi03NmIzMDUyMyZzY29wZWQ9dHJ1ZSEuL34vdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL3NyYy9jb21wb25lbnRzL0Nocm9tZVRhYnMudnVlXG4vLyBtb2R1bGUgaWQgPSA5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/***/ (function(module, exports) {

eval("module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3Z1ZS1sb2FkZXIvbGliL2NvbXBvbmVudC1ub3JtYWxpemVyLmpzP2Q0ZjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNkRBQTZEO0FBQzdEO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkMsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbm9ybWFsaXplQ29tcG9uZW50IChcbiAgcmF3U2NyaXB0RXhwb3J0cyxcbiAgY29tcGlsZWRUZW1wbGF0ZSxcbiAgc2NvcGVJZCxcbiAgY3NzTW9kdWxlc1xuKSB7XG4gIHZhciBlc01vZHVsZVxuICB2YXIgc2NyaXB0RXhwb3J0cyA9IHJhd1NjcmlwdEV4cG9ydHMgPSByYXdTY3JpcHRFeHBvcnRzIHx8IHt9XG5cbiAgLy8gRVM2IG1vZHVsZXMgaW50ZXJvcFxuICB2YXIgdHlwZSA9IHR5cGVvZiByYXdTY3JpcHRFeHBvcnRzLmRlZmF1bHRcbiAgaWYgKHR5cGUgPT09ICdvYmplY3QnIHx8IHR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICBlc01vZHVsZSA9IHJhd1NjcmlwdEV4cG9ydHNcbiAgICBzY3JpcHRFeHBvcnRzID0gcmF3U2NyaXB0RXhwb3J0cy5kZWZhdWx0XG4gIH1cblxuICAvLyBWdWUuZXh0ZW5kIGNvbnN0cnVjdG9yIGV4cG9ydCBpbnRlcm9wXG4gIHZhciBvcHRpb25zID0gdHlwZW9mIHNjcmlwdEV4cG9ydHMgPT09ICdmdW5jdGlvbidcbiAgICA/IHNjcmlwdEV4cG9ydHMub3B0aW9uc1xuICAgIDogc2NyaXB0RXhwb3J0c1xuXG4gIC8vIHJlbmRlciBmdW5jdGlvbnNcbiAgaWYgKGNvbXBpbGVkVGVtcGxhdGUpIHtcbiAgICBvcHRpb25zLnJlbmRlciA9IGNvbXBpbGVkVGVtcGxhdGUucmVuZGVyXG4gICAgb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBjb21waWxlZFRlbXBsYXRlLnN0YXRpY1JlbmRlckZuc1xuICB9XG5cbiAgLy8gc2NvcGVkSWRcbiAgaWYgKHNjb3BlSWQpIHtcbiAgICBvcHRpb25zLl9zY29wZUlkID0gc2NvcGVJZFxuICB9XG5cbiAgLy8gaW5qZWN0IGNzc01vZHVsZXNcbiAgaWYgKGNzc01vZHVsZXMpIHtcbiAgICB2YXIgY29tcHV0ZWQgPSBvcHRpb25zLmNvbXB1dGVkIHx8IChvcHRpb25zLmNvbXB1dGVkID0ge30pXG4gICAgT2JqZWN0LmtleXMoY3NzTW9kdWxlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICB2YXIgbW9kdWxlID0gY3NzTW9kdWxlc1trZXldXG4gICAgICBjb21wdXRlZFtrZXldID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlIH1cbiAgICB9KVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBlc01vZHVsZTogZXNNb2R1bGUsXG4gICAgZXhwb3J0czogc2NyaXB0RXhwb3J0cyxcbiAgICBvcHRpb25zOiBvcHRpb25zXG4gIH1cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi92dWUtbG9hZGVyL2xpYi9jb21wb25lbnQtbm9ybWFsaXplci5qc1xuLy8gbW9kdWxlIGlkID0gMTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"chrome-tabs\",\n    attrs: {\n      \"data-chrome-tabs-instance-id\": _vm.instanceId\n    }\n  }, [_c('div', {\n    ref: \"content\",\n    staticClass: \"chrome-tabs-content\"\n  }, _vm._l((_vm.tabs), function(tab, tabIndex) {\n    return _c('div', {\n      key: tab.id,\n      ref: \"tabs\",\n      refInFor: true,\n      staticClass: \"chrome-tab\",\n      class: {\n        'chrome-tab-current': (tab.id === _vm.currentTab),\n      },\n      style: ({\n        width: _vm.tabWidth + 'px',\n        zIndex: (tab.id === _vm.currentTab) ? (_vm.tabs.length + 1) : (_vm.tabs.length - tabIndex),\n      }),\n      on: {\n        \"click\": function($event) {\n          _vm.currentTab = tab.id\n        }\n      }\n    }, [_c('div', {\n      staticClass: \"chrome-tab-background\"\n    }, [_c('svg', {\n      attrs: {\n        \"version\": \"1.1\",\n        \"xmlns\": \"http://www.w3.org/2000/svg\"\n      }\n    }, [_c('defs', [_c('symbol', {\n      attrs: {\n        \"id\": \"topleft\",\n        \"viewBox\": \"0 0 214 29\"\n      }\n    }, [_c('path', {\n      attrs: {\n        \"d\": \"M14.3 0.1L214 0.1 214 29 0 29C0 29 12.2 2.6 13.2 1.1 14.3-0.4 14.3 0.1 14.3 0.1Z\"\n      }\n    })]), _c('symbol', {\n      attrs: {\n        \"id\": \"topright\",\n        \"viewBox\": \"0 0 214 29\"\n      }\n    }, [_c('use', {\n      attrs: {\n        \"xlink:href\": \"#topleft\"\n      }\n    })]), _c('clipPath', {\n      attrs: {\n        \"id\": \"crop\"\n      }\n    }, [_c('rect', {\n      staticClass: \"mask\",\n      attrs: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"x\": \"0\"\n      }\n    })])]), _c('svg', {\n      attrs: {\n        \"width\": \"50%\",\n        \"height\": \"100%\",\n        \"transfrom\": \"scale(-1, 1)\"\n      }\n    }, [_c('use', {\n      staticClass: \"chrome-tab-background\",\n      attrs: {\n        \"xlink:href\": \"#topleft\",\n        \"width\": \"214\",\n        \"height\": \"29\"\n      }\n    }), _c('use', {\n      staticClass: \"chrome-tab-shadow\",\n      attrs: {\n        \"xlink:href\": \"#topleft\",\n        \"width\": \"214\",\n        \"height\": \"29\"\n      }\n    })]), _c('g', {\n      attrs: {\n        \"transform\": \"scale(-1, 1)\"\n      }\n    }, [_c('svg', {\n      attrs: {\n        \"width\": \"50%\",\n        \"height\": \"100%\",\n        \"x\": \"-100%\",\n        \"y\": \"0\"\n      }\n    }, [_c('use', {\n      staticClass: \"chrome-tab-background\",\n      attrs: {\n        \"xlink:href\": \"#topright\",\n        \"width\": \"214\",\n        \"height\": \"29\"\n      }\n    }), _c('use', {\n      staticClass: \"chrome-tab-shadow\",\n      attrs: {\n        \"xlink:href\": \"#topright\",\n        \"width\": \"214\",\n        \"height\": \"29\"\n      }\n    })])])])]), _vm._v(\" \"), _c('div', {\n      staticClass: \"chrome-tab-favicon\",\n      style: ({\n        backgroundImage: 'url(' + tab.favicon + ')'\n      })\n    }), _vm._v(\" \"), _c('div', {\n      staticClass: \"chrome-tab-title\"\n    }, [_vm._v(_vm._s(tab.title))]), _vm._v(\" \"), _c('div', {\n      staticClass: \"chrome-tab-close\",\n      on: {\n        \"click\": function($event) {\n          $event.stopPropagation();\n          _vm.removeTabAt(tabIndex)\n        }\n      }\n    })])\n  })), _vm._v(\" \"), _c('div', {\n    ref: \"bottom\",\n    staticClass: \"chrome-tabs-bottom-bar\",\n    style: ({\n      zIndex: _vm.tabs.length + 1\n    })\n  })])\n},staticRenderFns: []}\nmodule.exports.render._withStripped = true\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n     require(\"vue-hot-reload-api\").rerender(\"data-v-76b30523\", module.exports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9DaHJvbWVUYWJzLnZ1ZT8zMzAzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBbUIsYUFBYSwwQkFBMEI7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cz17cmVuZGVyOmZ1bmN0aW9uICgpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO1xuICByZXR1cm4gX2MoJ2RpdicsIHtcbiAgICBzdGF0aWNDbGFzczogXCJjaHJvbWUtdGFic1wiLFxuICAgIGF0dHJzOiB7XG4gICAgICBcImRhdGEtY2hyb21lLXRhYnMtaW5zdGFuY2UtaWRcIjogX3ZtLmluc3RhbmNlSWRcbiAgICB9XG4gIH0sIFtfYygnZGl2Jywge1xuICAgIHJlZjogXCJjb250ZW50XCIsXG4gICAgc3RhdGljQ2xhc3M6IFwiY2hyb21lLXRhYnMtY29udGVudFwiXG4gIH0sIF92bS5fbCgoX3ZtLnRhYnMpLCBmdW5jdGlvbih0YWIsIHRhYkluZGV4KSB7XG4gICAgcmV0dXJuIF9jKCdkaXYnLCB7XG4gICAgICBrZXk6IHRhYi5pZCxcbiAgICAgIHJlZjogXCJ0YWJzXCIsXG4gICAgICByZWZJbkZvcjogdHJ1ZSxcbiAgICAgIHN0YXRpY0NsYXNzOiBcImNocm9tZS10YWJcIixcbiAgICAgIGNsYXNzOiB7XG4gICAgICAgICdjaHJvbWUtdGFiLWN1cnJlbnQnOiAodGFiLmlkID09PSBfdm0uY3VycmVudFRhYiksXG4gICAgICB9LFxuICAgICAgc3R5bGU6ICh7XG4gICAgICAgIHdpZHRoOiBfdm0udGFiV2lkdGggKyAncHgnLFxuICAgICAgICB6SW5kZXg6ICh0YWIuaWQgPT09IF92bS5jdXJyZW50VGFiKSA/IChfdm0udGFicy5sZW5ndGggKyAxKSA6IChfdm0udGFicy5sZW5ndGggLSB0YWJJbmRleCksXG4gICAgICB9KSxcbiAgICAgIG9uOiB7XG4gICAgICAgIFwiY2xpY2tcIjogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgX3ZtLmN1cnJlbnRUYWIgPSB0YWIuaWRcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sIFtfYygnZGl2Jywge1xuICAgICAgc3RhdGljQ2xhc3M6IFwiY2hyb21lLXRhYi1iYWNrZ3JvdW5kXCJcbiAgICB9LCBbX2MoJ3N2ZycsIHtcbiAgICAgIGF0dHJzOiB7XG4gICAgICAgIFwidmVyc2lvblwiOiBcIjEuMVwiLFxuICAgICAgICBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgfVxuICAgIH0sIFtfYygnZGVmcycsIFtfYygnc3ltYm9sJywge1xuICAgICAgYXR0cnM6IHtcbiAgICAgICAgXCJpZFwiOiBcInRvcGxlZnRcIixcbiAgICAgICAgXCJ2aWV3Qm94XCI6IFwiMCAwIDIxNCAyOVwiXG4gICAgICB9XG4gICAgfSwgW19jKCdwYXRoJywge1xuICAgICAgYXR0cnM6IHtcbiAgICAgICAgXCJkXCI6IFwiTTE0LjMgMC4xTDIxNCAwLjEgMjE0IDI5IDAgMjlDMCAyOSAxMi4yIDIuNiAxMy4yIDEuMSAxNC4zLTAuNCAxNC4zIDAuMSAxNC4zIDAuMVpcIlxuICAgICAgfVxuICAgIH0pXSksIF9jKCdzeW1ib2wnLCB7XG4gICAgICBhdHRyczoge1xuICAgICAgICBcImlkXCI6IFwidG9wcmlnaHRcIixcbiAgICAgICAgXCJ2aWV3Qm94XCI6IFwiMCAwIDIxNCAyOVwiXG4gICAgICB9XG4gICAgfSwgW19jKCd1c2UnLCB7XG4gICAgICBhdHRyczoge1xuICAgICAgICBcInhsaW5rOmhyZWZcIjogXCIjdG9wbGVmdFwiXG4gICAgICB9XG4gICAgfSldKSwgX2MoJ2NsaXBQYXRoJywge1xuICAgICAgYXR0cnM6IHtcbiAgICAgICAgXCJpZFwiOiBcImNyb3BcIlxuICAgICAgfVxuICAgIH0sIFtfYygncmVjdCcsIHtcbiAgICAgIHN0YXRpY0NsYXNzOiBcIm1hc2tcIixcbiAgICAgIGF0dHJzOiB7XG4gICAgICAgIFwid2lkdGhcIjogXCIxMDAlXCIsXG4gICAgICAgIFwiaGVpZ2h0XCI6IFwiMTAwJVwiLFxuICAgICAgICBcInhcIjogXCIwXCJcbiAgICAgIH1cbiAgICB9KV0pXSksIF9jKCdzdmcnLCB7XG4gICAgICBhdHRyczoge1xuICAgICAgICBcIndpZHRoXCI6IFwiNTAlXCIsXG4gICAgICAgIFwiaGVpZ2h0XCI6IFwiMTAwJVwiLFxuICAgICAgICBcInRyYW5zZnJvbVwiOiBcInNjYWxlKC0xLCAxKVwiXG4gICAgICB9XG4gICAgfSwgW19jKCd1c2UnLCB7XG4gICAgICBzdGF0aWNDbGFzczogXCJjaHJvbWUtdGFiLWJhY2tncm91bmRcIixcbiAgICAgIGF0dHJzOiB7XG4gICAgICAgIFwieGxpbms6aHJlZlwiOiBcIiN0b3BsZWZ0XCIsXG4gICAgICAgIFwid2lkdGhcIjogXCIyMTRcIixcbiAgICAgICAgXCJoZWlnaHRcIjogXCIyOVwiXG4gICAgICB9XG4gICAgfSksIF9jKCd1c2UnLCB7XG4gICAgICBzdGF0aWNDbGFzczogXCJjaHJvbWUtdGFiLXNoYWRvd1wiLFxuICAgICAgYXR0cnM6IHtcbiAgICAgICAgXCJ4bGluazpocmVmXCI6IFwiI3RvcGxlZnRcIixcbiAgICAgICAgXCJ3aWR0aFwiOiBcIjIxNFwiLFxuICAgICAgICBcImhlaWdodFwiOiBcIjI5XCJcbiAgICAgIH1cbiAgICB9KV0pLCBfYygnZycsIHtcbiAgICAgIGF0dHJzOiB7XG4gICAgICAgIFwidHJhbnNmb3JtXCI6IFwic2NhbGUoLTEsIDEpXCJcbiAgICAgIH1cbiAgICB9LCBbX2MoJ3N2ZycsIHtcbiAgICAgIGF0dHJzOiB7XG4gICAgICAgIFwid2lkdGhcIjogXCI1MCVcIixcbiAgICAgICAgXCJoZWlnaHRcIjogXCIxMDAlXCIsXG4gICAgICAgIFwieFwiOiBcIi0xMDAlXCIsXG4gICAgICAgIFwieVwiOiBcIjBcIlxuICAgICAgfVxuICAgIH0sIFtfYygndXNlJywge1xuICAgICAgc3RhdGljQ2xhc3M6IFwiY2hyb21lLXRhYi1iYWNrZ3JvdW5kXCIsXG4gICAgICBhdHRyczoge1xuICAgICAgICBcInhsaW5rOmhyZWZcIjogXCIjdG9wcmlnaHRcIixcbiAgICAgICAgXCJ3aWR0aFwiOiBcIjIxNFwiLFxuICAgICAgICBcImhlaWdodFwiOiBcIjI5XCJcbiAgICAgIH1cbiAgICB9KSwgX2MoJ3VzZScsIHtcbiAgICAgIHN0YXRpY0NsYXNzOiBcImNocm9tZS10YWItc2hhZG93XCIsXG4gICAgICBhdHRyczoge1xuICAgICAgICBcInhsaW5rOmhyZWZcIjogXCIjdG9wcmlnaHRcIixcbiAgICAgICAgXCJ3aWR0aFwiOiBcIjIxNFwiLFxuICAgICAgICBcImhlaWdodFwiOiBcIjI5XCJcbiAgICAgIH1cbiAgICB9KV0pXSldKV0pLCBfdm0uX3YoXCIgXCIpLCBfYygnZGl2Jywge1xuICAgICAgc3RhdGljQ2xhc3M6IFwiY2hyb21lLXRhYi1mYXZpY29uXCIsXG4gICAgICBzdHlsZTogKHtcbiAgICAgICAgYmFja2dyb3VuZEltYWdlOiAndXJsKCcgKyB0YWIuZmF2aWNvbiArICcpJ1xuICAgICAgfSlcbiAgICB9KSwgX3ZtLl92KFwiIFwiKSwgX2MoJ2RpdicsIHtcbiAgICAgIHN0YXRpY0NsYXNzOiBcImNocm9tZS10YWItdGl0bGVcIlxuICAgIH0sIFtfdm0uX3YoX3ZtLl9zKHRhYi50aXRsZSkpXSksIF92bS5fdihcIiBcIiksIF9jKCdkaXYnLCB7XG4gICAgICBzdGF0aWNDbGFzczogXCJjaHJvbWUtdGFiLWNsb3NlXCIsXG4gICAgICBvbjoge1xuICAgICAgICBcImNsaWNrXCI6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICBfdm0ucmVtb3ZlVGFiQXQodGFiSW5kZXgpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KV0pXG4gIH0pKSwgX3ZtLl92KFwiIFwiKSwgX2MoJ2RpdicsIHtcbiAgICByZWY6IFwiYm90dG9tXCIsXG4gICAgc3RhdGljQ2xhc3M6IFwiY2hyb21lLXRhYnMtYm90dG9tLWJhclwiLFxuICAgIHN0eWxlOiAoe1xuICAgICAgekluZGV4OiBfdm0udGFicy5sZW5ndGggKyAxXG4gICAgfSlcbiAgfSldKVxufSxzdGF0aWNSZW5kZXJGbnM6IFtdfVxubW9kdWxlLmV4cG9ydHMucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5pZiAobW9kdWxlLmhvdCkge1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmIChtb2R1bGUuaG90LmRhdGEpIHtcbiAgICAgcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKS5yZXJlbmRlcihcImRhdGEtdi03NmIzMDUyM1wiLCBtb2R1bGUuZXhwb3J0cylcbiAgfVxufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci5qcz9pZD1kYXRhLXYtNzZiMzA1MjMhLi9+L3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL3NyYy9jb21wb25lbnRzL0Nocm9tZVRhYnMudnVlXG4vLyBtb2R1bGUgaWQgPSAxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///11\n");

/***/ })
/******/ ]);
});